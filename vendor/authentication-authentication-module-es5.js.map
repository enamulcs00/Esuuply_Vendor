{"version":3,"sources":["webpack:///node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","webpack:///src/app/authentication/404/not-found.component.ts","webpack:///src/app/authentication/404/not-found.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication.routing.ts","webpack:///src/app/authentication/detail-form/detail-form.component.ts","webpack:///src/app/authentication/detail-form/detail-form.component.html","webpack:///src/app/authentication/lock/changepassword.component.ts","webpack:///src/app/authentication/lock/changepassword.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/login2/login2.component.ts","webpack:///src/app/authentication/login2/login2.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup2/signup2.component.ts","webpack:///src/app/authentication/signup2/signup2.component.html"],"names":["NgOtpInputComponent_div_0_input_1_Template","rf","ctx","_r5","NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener","$event","ctx_r4","onKeyDown","NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener","i_r3","index","ctx_r6","onKeyUp","item_r2","$implicit","ctx_r1","config","inputClass","componentKey","allowNumbersOnly","inputType","placeholder","inputStyles","otpForm","controls","NgOtpInputComponent_div_0_Template","ctx_r0","containerClass","containerStyles","KeysPipe","value","Object","keys","ɵfac","KeysPipe_Factory","t","ɵpipe","name","type","pure","args","Config","NgOtpInputComponent","keysPipe","length","onInputChange","inputControls","Array","Math","random","toString","substring","Date","getTime","addControl","getControlName","getInputType","disableAutoFocus","containerItem","document","getElementById","addEventListener","evt","handlePaste","ele","getElementsByClassName","focus","idx","event","ifKeyCode","key","targetCode","keyCode","charCode","isSpace","inputIdx","nextInputId","appendKey","prevInputId","ifRightArrow","setSelected","ifLeftArrow","isBackspace","ifBackspaceOrDelete","target","rebuildValue","ifValidEntry","id","eleId","focusTo","setSelectionRange","setTimeout","inp","String","fromCharCode","isMobile","test","navigator","userAgent","allowKeyCodes","includes","isNaN","reset","replace","from","forEach","c","get","setValue","indexOfElementToFocus","val","transform","k","emit","isPasswordInput","e","clipboardData","window","pastedData","getData","stopPropagation","preventDefault","NgOtpInputComponent_Factory","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","NgOtpInputComponent_Template","directives","NumberOnlyDirective","pipes","styles","ctorParameters","propDecorators","selector","_elRef","_renderer","disabledNumberOnly","setAttribute","nativeElement","NumberOnlyDirective_Factory","ɵdir","NgOtpInputModule","ɵmod","ɵinj","factory","NgOtpInputModule_Factory","providers","imports","ngJitMode","declarations","exports","NotfoundComponent","templateUrl","AuthenticationModule","forChild","AuthenticationRoutes","path","children","component","DetailFormComponent","days","ref","checked","row","createElement","className","innerHTML","querySelector","appendChild","removed","console","log","check","add","styleUrls","changepasswordComponent","fb","toaster","router","authService","spinner","history","isSubmitted","errorHandlingSignup","control","error","form","hasError","group","oldPassword","required","newPassword","confirmNewPassword","valid","show","data","changePassword","subscribe","response","hide","statusCode","fire","message","navigate","invalid","save","LoginComponent","loginform","recoverform","showRecoverForm","Login2Component","modalService","service","CountryCode","IsphoneRecover","isphoneLogin","submitted","loginform1","phonecode","otp","loginwithEmail","errorHandlingphone","loginWithPhone","errorPhoneRecoverForm","phoneRecover","getJson","res","countrycode","countryArray","code","dial_code","content3","open","backdropClass","centered","size","phone","compose","pattern","maxLength","minLength","recoveryForm","email","password","remember","localStorage","getItem","formData","JSON","parse","patchValue","otpFrom","url","signIn","user","setItem","stringify","accessToken","removeItem","phoneNo","dialCode","forgot","forgotPhone","openWindowCustomClass","otpvalue","verifyPhone","sessionStorage","obj","sentOtp","CancelForgot","recover","SignupComponent","Signup2Component","signUpWithEmail","signUpWithPhone","firstName","lastName","confirmPassword","countryCode","signUp"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html'\n})\nexport class NotfoundComponent implements AfterViewInit {\n  ngAfterViewInit() {}\n}\n","<div class=\"error-box\">\n    <div class=\"error-body text-center\">\n        <h1 class=\"error-title text-danger\">404</h1>\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\n        <a href=\"#/dashboard/classic\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component'; \nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Signup2Component } from './signup2/signup2.component';\n\nimport { AuthenticationRoutes } from './authentication.routing';\nimport { DetailFormComponent } from './detail-form/detail-form.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { NgOtpInputModule } from  'ng-otp-input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n@NgModule({\n  imports: [\n    CommonModule, \n    RouterModule.forChild(AuthenticationRoutes),\n    NgbModule,\n    MatSlideToggleModule,\n    NgOtpInputModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule\n  ],\n  declarations: [\n    NotfoundComponent,\n    LoginComponent,\n    SignupComponent,\n    changepasswordComponent,\n    Login2Component,\n    Signup2Component,\n    DetailFormComponent\n  ],\n // providers: []\n})\nexport class AuthenticationModule {}\n","import { Routes } from '@angular/router';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { DetailFormComponent } from './detail-form/detail-form.component';\nimport { changepasswordComponent } from './lock/changepassword.component';\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Signup2Component } from './signup2/signup2.component';\n\nexport const AuthenticationRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: 'changepassword',\n        component: changepasswordComponent\n      },\n      {\n        path: 'login2',\n        component: LoginComponent\n      },\n      {\n        path: 'login',\n        component: Login2Component\n      },\n      {\n        path: 'signup',\n        component: SignupComponent\n      },\n      {\n        path: 'signup2',\n        component: Signup2Component\n      },\n      {\n        path: 'vendor_detail',\n        component: DetailFormComponent\n      },\n    ]\n  }\n];\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-detail-form',\n  templateUrl: './detail-form.component.html',\n  styleUrls: ['./detail-form.component.css']\n})\nexport class DetailFormComponent implements OnInit {\n  checked:string;\n  days:string[]=['sun','mon','tue','wed','thu','fri','sat']\n    constructor() { }\n  \n    ngOnInit(): void {\n    }\n    check(e,ref){\n      if(ref=='mon' && e.checked){\n         this.checked = 'mon'\n        }\n        else if(ref=='sun' && e.checked){\n          this.checked = 'sun'\n          if(ref=='sun' && !e.checked){\n            this.checked = 'xyx'\n          }\n        }\n      }\n    add(){ \n      let row = document.createElement('div');   \n        row.className = 'row mb-2'; \n        row.innerHTML = ` \n        <div class=\"col-md-5\">\n        <input type=\"time\" placeholder=\"\" class=\"form-control\">\n      </div>\n      <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n      <div class=\"col-md-2\"><a href=\"javascript:void(0)\" ><i class=\"far fa-times-circle\"></i></a></div>\n        `; \n        document.querySelector('.showInputField').appendChild(row); \n    } \n    remove(){\n      let removed = document.querySelector('.row.mb-2'); \n      console.log(removed);\n    }\n\n}\n","<header class=\"bg-primary text-center p-2\">\n  <a href=\"javascript:void()\"><img src=\"assets/images/logo-icon.svg\" class=\"img-fluid\"><img src=\"assets/images/logo-content.svg\" class=\"img-fluid\"></a>\n</header>\n<div class=\"container mt-3\">\n<div class=\"card p-3\">    \n  <h4 class=\"\">Vendor Detail</h4>\n    <form action=\"#\">\n      <div class=\"form-body\">\n        <div class=\"card-body\">\n            <!-- <div class=\"row\">\n                <div class=\"col-md-12 text-right\">\n                    <button routerLink=\"/pages/vendors\" class=\"btn btn-primary \">Back</button>\n                </div>\n            </div> -->\n            <!-- end row -->\n          <div class=\"row p-t-20\">\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"control-label\">First Name</label>\n                <input type=\"text\" id=\"firstName\" class=\"form-control\" placeholder=\"John doe\">\n  \n              </div>\n            </div>\n            <!--/span-->\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"control-label\">Last Name</label>\n                <input type=\"text\" id=\"firstName\" class=\"form-control\" placeholder=\"John doe\">\n  \n              </div>\n            </div>\n             <!--/span-->\n            <div class=\"col-md-6\">\n              <div class=\"form-group has-success\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Upload Vendor Profile</label>\n                  <div class=\"custom-file\"><input class=\"custom-file-input\" id=\"inputGroupFile01\" type=\"file\"\n                      ><label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label></div>\n                </div>\n              </div>\n            </div>\n            <!--/span-->\n            <!-- <div class=\"col-md-6\">\n              <div class=\"form-group has-success\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\"></label>\n                  <div class=\"custom-file\"><input class=\"custom-file-input\" id=\"inputGroupFile01\" type=\"file\"\n                      ><label class=\"custom-file-label\" for=\"inputGroupFile01\">Choose file</label></div>\n                </div>\n              </div>\n            </div> -->\n            <!--/span-->\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"control-label\">Restaurant Name</label>\n                <input type=\"number\" id=\"firstName\" class=\"form-control\" placeholder=\"Restaurant name\">\n  \n              </div>\n            </div>\n          </div>\n          <!--/row-->\n          <div class=\"row \">\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"control-label\">Date of birth</label>\n                <input type=\"date\" id=\"firstName\" class=\"form-control\" placeholder=\"\">\n  \n              </div>\n            </div>\n            <!--/span-->\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"control-label\">Email</label>\n                <input type=\"email\" id=\"firstName\" class=\"form-control\" placeholder=\"example@gmail.com\">\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group\">\n                <label class=\"control-label\">Are you currently delivering right now?*</label>\n                <select name=\"\" id=\"\" class=\"form-control\">\n                  <option value=\"yes\">Yes</option>\n                  <option value=\"no\">No</option>\n                </select>\n              </div>\n            </div>\n            <!--/span-->\n            <!-- <div class=\"col-md-6\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">Vendor ID</label>\n                <input type=\"text\" id=\"email\" class=\"form-control form-control-danger\" placeholder=\"#46543343\">\n              </div>\n            </div> -->\n            <!--/span-->\n            <div class=\"col-md-6\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">Zip</label>\n                <input type=\"text\" id=\"zip\" class=\"form-control form-control-danger\" placeholder=\"eg:44343\">\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">\n                  Type of restaurant</label>\n                <input type=\"text\" id=\"zip\" class=\"form-control form-control-danger\" placeholder=\"eg:44343\">\n              </div>\n            </div>\n            <!--/span-->\n            <!-- <div class=\"col-md-6\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">Total Orders</label>\n                <input type=\"text\" id=\"email\" class=\"form-control form-control-danger\" placeholder=\"40\">\n              </div>\n            </div> -->\n            <!--/span-->\n            <div class=\"col-md-6\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">City</label>\n                <input type=\"text\" id=\"city\" class=\"form-control form-control-danger\" placeholder=\"Berlin\">\n              </div>\n            </div>\n            <!-- <div class=\"col-md-6\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">Opening Time</label>\n                <input type=\"time\" id=\"email\" class=\"form-control form-control-danger\" placeholder=\"00\">\n              </div>\n            </div>  -->\n            <!--/span-->\n             <!-- <div class=\"col-md-6\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">Closing Time</label>\n                <input type=\"time\" id=\"email\" class=\"form-control form-control-danger\" placeholder=\"40\">\n              </div>\n            </div> -->\n            <!--/span-->\n           \n            <!--/span-->\n            <!-- <div class=\"col-md-12\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">Pincode</label>\n                <input type=\"text\" id=\"email\" class=\"form-control form-control-danger\" placeholder=\"Pincode\">\n              </div>\n            </div> -->\n            <!--/span-->\n            <div class=\"col-md-12\">\n              <div class=\"form-group has-danger\">\n                <label class=\"control-label\">Address</label>\n                <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\" class=\"form-control\"\n                  placeholder=\"#433 New garden Complex\"></textarea>\n              </div>\n            </div>\n            <!--/span-->\n          </div>\n          <!--/row-->\n       \n  \n    \n    <h4>Opening days</h4>\n   \n      \n      <div class=\"row mb-3\">\n        <div class=\"col-md-4\">\n          <div class=\"row\">\n            <div class=\"col-md-6\"><label>Monday</label></div>\n            <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n              \"check($event,'mon')\" >{{(checked == 'mon')?'Open':'Closed'}}</mat-slide-toggle></div>\n            </div>\n          </div>\n          <div class=\"col-md-8\">\n            <div class=\"row\">\n              <div class=\"col-md-5\">\n                <input type=\"time\" placeholder=\"\" class=\"form-control\">\n              </div>\n              <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n              <div class=\"col-md-2\"><a href=\"javascript:void()\" (click)=\"add()\">Add hours</a></div>\n            </div>\n          </div>  \n          <div class=\"offset-md-4 col-md-8 mt-2 \">\n            <div class=\" showInputField\">\n              \n            </div>\n          </div>  \n        </div>\n        <div class=\"row mb-3\">\n          <div class=\"col-md-4\">\n            <div class=\"row\">\n              <div class=\"col-md-6\"><label>Tuesday</label></div>\n              <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                \"check($event,'tue')\" >{{(checked == 'tue')?'Open':'Closed'}}</mat-slide-toggle></div>\n              </div>\n            </div>\n            <div class=\"col-md-8\">\n              <div class=\"row\">\n                <div class=\"col-md-5\">\n                  <input type=\"time\" placeholder=\"\" class=\"form-control\">\n                </div>\n                <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n                <div class=\"col-md-2\"><a href=\"javascript:void()\" (click)=\"add()\">Add hours</a></div>\n              </div>\n            </div>  \n            <div class=\"offset-md-4 col-md-8 mt-2 \">\n              <div class=\" showInputField\">\n                \n              </div>\n            </div>  \n          </div>\n          <div class=\"row mb-3\">\n            <div class=\"col-md-4\">\n              <div class=\"row\">\n                <div class=\"col-md-6\"><label>Wednesday</label></div>\n                <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                  \"check($event,'wed')\" >{{(checked == 'wed')?'Open':'Closed'}}</mat-slide-toggle></div>\n                </div>\n              </div>\n              <div class=\"col-md-8\">\n                <div class=\"row\">\n                  <div class=\"col-md-5\">\n                    <input type=\"time\" placeholder=\"\" class=\"form-control\">\n                  </div>\n                  <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n                  <div class=\"col-md-2\"><a href=\"javascript:void()\" (click)=\"add()\">Add hours</a></div>\n                </div>\n              </div>  \n              <div class=\"offset-md-4 col-md-8 mt-2 \">\n                <div class=\" showInputField\">\n                  \n                </div>\n              </div>  \n            </div>\n            <div class=\"row mb-3\">\n              <div class=\"col-md-4\">\n                <div class=\"row\">\n                  <div class=\"col-md-6\"><label>Thusrday</label></div>\n                  <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                    \"check($event,'thu')\" >{{(checked == 'thu')?'Open':'Closed'}}</mat-slide-toggle></div>\n                  </div>\n                </div>\n                <div class=\"col-md-8\">\n                  <div class=\"row\">\n                    <div class=\"col-md-5\">\n                      <input type=\"time\" placeholder=\"\" class=\"form-control\">\n                    </div>\n                    <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n                    <div class=\"col-md-2\"><a href=\"javascript:void()\" (click)=\"add()\">Add hours</a></div>\n                  </div>\n                </div>  \n                <div class=\"offset-md-4 col-md-8 mt-2 \">\n                  <div class=\" showInputField\">\n                  </div>\n                </div>  \n              </div>           \n                <div class=\"row mb-3\">\n                  <div class=\"col-md-4\">\n                    <div class=\"row\">\n                      <div class=\"col-md-6\"><label>Friday</label></div>\n                      <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                        \"check($event,'fri')\" >{{(checked == 'fri')?'Open':'Closed'}}</mat-slide-toggle></div>\n                      </div>\n                    </div>\n                    <div class=\"col-md-8\">\n                      <div class=\"row\">\n                        <div class=\"col-md-5\">\n                          <input type=\"time\" placeholder=\"\" class=\"form-control\">\n                        </div>\n                        <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n                        <div class=\"col-md-2\"><a href=\"javascript:void()\" (click)=\"add()\">Add hours</a></div>\n                      </div>\n                    </div>  \n                    <div class=\"offset-md-4 col-md-8 mt-2 \">\n                      <div class=\" showInputField\">\n                        \n                      </div>\n                    </div>  \n                  </div>\n                  <div class=\"row mb-3\">\n                    <div class=\"col-md-4\">\n                      <div class=\"row\">\n                        <div class=\"col-md-6\"><label>Saturday</label></div>\n                        <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                          \"check($event,'sat')\" >{{(checked == 'sat')?'Open':'Closed'}}</mat-slide-toggle></div>\n                        </div>\n                      </div>\n                      <div class=\"col-md-8\">\n                        <div class=\"row\">\n                          <div class=\"col-md-5\">\n                            <input type=\"time\" placeholder=\"\" class=\"form-control\">\n                          </div>\n                          <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n                          <div class=\"col-md-2\"><a href=\"javascript:void()\" (click)=\"add()\">Add hours</a></div>\n                        </div>\n                      </div>  \n                      <div class=\"offset-md-4 col-md-8 mt-2 \">\n                        <div class=\" showInputField\">\n                          \n                        </div>\n                      </div>  \n                    </div>\n                    <div class=\"row mb-3\">\n                      <div class=\"col-md-4\">\n                        <div class=\"row\">\n                          <div class=\"col-md-6\"><label>Sunday</label></div>\n                          <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                            \"check($event,'sun')\" >{{(checked == 'sun')?'Open':'Closed'}}</mat-slide-toggle></div>\n                          </div>\n                        </div>\n                        <div class=\"col-md-8\">\n                          <div class=\"row\">\n                            <div class=\"col-md-5\">\n                              <input type=\"time\" placeholder=\"\" class=\"form-control\">\n                            </div>\n                            <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n                            <div class=\"col-md-2\"><a href=\"javascript:void()\" (click)=\"add()\">Add hours</a></div>\n                          </div>\n                        </div>  \n                        <div class=\"offset-md-4 col-md-8 mt-2 \">\n                          <div class=\" showInputField\">\n                            \n                          </div>\n                        </div>  \n                      </div>\n                      <div class=\"row mb-3\">\n                        <div class=\"col-md-4\">\n                          <div class=\"row\">\n                            <div class=\"col-md-6\"><label>Shop Status</label></div>\n                            <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                              \"check($event,'shop')\" >{{(checked == 'shop')?'Enable':'Disable'}}</mat-slide-toggle></div>\n                            </div>\n                          </div>                                           \n                        </div>\n                        <div class=\"row mb-3\">\n                          <div class=\"col-md-4\">\n                            <div class=\"row\">\n                              <div class=\"col-md-6\"><label>Coming Soon</label></div>\n                              <div class=\"col-md-6\"><mat-slide-toggle class=\"\" color=\"primary\"(change)=\n                                \"check($event,'shop')\" >{{(checked == 'shop')?'Enable':'Disable'}}</mat-slide-toggle></div>\n                              </div>\n                            </div>                     \n                          </div>\n                        <div class=\"col-md-12\">                        \n                            <button type=\"submit\" class=\"btn btn-primary mr-3\" routerLink=\"/dashboard\">\n                              Save</button>\n                            <!-- <button type=\"button\" class=\"btn btn-dark\" >Cancel</button> -->\n                          </div>\n                        </div>                   \n                    </div>\n                    </form>\n      </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html'\n})\nexport class changepasswordComponent implements OnInit{\n  form: FormGroup;\n  history = window.history;\n  isSubmitted: Boolean = false\n  constructor(\n    private fb: FormBuilder,\n    private toaster: ToastrService,\n    private router: Router,\n    private authService: SharedService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      oldPassword: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmNewPassword: ['', Validators.required]\n     })\n  }\n  public errorHandlingSignup = (control: string, error: string) => {\n    return this.form.controls[control].hasError(error);\n  }\n  save() {\n    this.isSubmitted = true\n    if (this.form.valid){\n      this.spinner.show()\n    let data = {\n      oldPassword: this.form.value.oldPassword,\n      newPassword: this.form.value.newPassword,\n     // confirmPassword: this.form.value.newPassword,\n    }\n    this.isSubmitted = false\n    this.authService.changePassword(data).subscribe((response:any) => {\n      this.spinner.hide()\n      if (response.statusCode==200) {\n        Swal.fire('Success',response.message,'success')\n        this.router.navigate(['dashboard'])\n      } else {\n        Swal.fire('Oops',response.message,'error')\n      }\n    }, error => {\n      \n      this.spinner.hide()\n      console.log(error)\n      Swal.fire('Oops',error.message,'error')\n    })\n    } else if(this.form.invalid){\n      Swal.fire('Oops','Please fill all field','error')\n    }\n    \n  }\n  \n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/logo.svg\"></span>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" [formGroup]=\"form\">\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Old Password\" formControlName=\"oldPassword\">\n                                <p class=\"text-white\"\n                                *ngIf=\"isSubmitted && errorHandlingSignup('oldPassword', 'required')\">Old password is required!</p>\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"New Password\" formControlName=\"newPassword\">\n                                <p class=\"text-white\"\n                                *ngIf=\"isSubmitted && errorHandlingSignup('newPassword', 'required')\">New password is required!</p>\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Retype Password\" formControlName=\"confirmNewPassword\">\n                                <p class=\"text-white\"\n                                *ngIf=\"isSubmitted && errorHandlingSignup('confirmNewPassword', 'required')\">\n                                Confirm password is required!\n                                    </p>\n                            <p class=\"text-white\"\n                                *ngIf=\"(form.get('confirmNewPassword').value.length>0) && form.get('newPassword').value !=  form.get('confirmNewPassword').value\">\n                                Password mismatched!\n                                </p>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"button\" (click)=\"history.back()\">Cancel</button>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"button\" (click)=\"save()\">Submit</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  constructor() { }\n\n  loginform = true;\n  recoverform = false;\n\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\">\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n                        </div>\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\">\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\">Log In</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                <div class=\"social\">\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab fa-facebook\"></i> </a>\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab fa-google-plus\"></i> </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group m-b-0 m-t-10\">\n                            <div class=\"col-sm-12 text-center\">\n                                Don't have an account? <a href=\"#/authentication/signup\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\">\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Username\">\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-danger\" type=\"submit\" name=\"action\">Reset</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\nimport { SharedService } from '../shared.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login2.component.html',\n  styleUrls: ['./login2.scss']\n\n})\nexport class Login2Component implements OnInit{\n  countryCode: any;\n  constructor(private spinner:NgxSpinnerService, private modalService: NgbModal,private service:SharedService,private fb:FormBuilder,private router:Router){\n    this.service.getJson().subscribe((res:any)=>\n    {\n      this.countrycode = res.countryArray\n      this.code = res.countryArray[0].dial_code\n      \n    })\n  }\n  countrycode: any;\n  code: any;\n  otpvalue: number;\n  CountryCode:any = +93\n  IsphoneRecover:boolean = false\n  isSubmitted:boolean = false\n  recoveryForm:FormGroup\n  isphoneLogin:boolean = false\n  submitted:boolean = false\n  loginwithEmail:FormGroup\n  loginform = true;\n  loginform1 = false;\n  recoverform = false;\n  phonecode = false;\n  otp= false;\n  phoneRecover:FormGroup\n  loginWithPhone:FormGroup\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n  otpFrom() {\n    this.loginform1 = !this.loginform1;\n    this.loginform = !this.loginform;\n    this.otp = !this.otp;\n  }\n  CancelForgot(){\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n  openWindowCustomClass(content3) {\n    this.modalService.open(content3, {backdropClass: 'light-blue-backdrop',centered: true,size: 'sm'});\n  }\n  clicked(){\n    console.log(\"hele\");\n    this.loginform = true;\n    this.phonecode = true;\n  }\n  ngOnInit(){\n    this.phoneRecover = this.fb.group({\n      CountryCode:[this.code],\n      phone:['',Validators.compose([Validators.required,Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')\n         ,Validators.maxLength(15),Validators.minLength(7)])],\n  })\n    this.phoneRecover.get('CountryCode').setValue(this.code)\n    this.recoveryForm = this.fb.group({\n      email:['',[Validators.required,Validators.email,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n    })\n    this.loginwithEmail = this.fb.group({\n      email:['',[Validators.required,Validators.email,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n    password:['',Validators.required],\n    remember:['']\n    })\n    this.loginWithPhone = this.fb.group({\n      phone:['',Validators.compose([Validators.required,Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')\n         ,Validators.maxLength(15),Validators.minLength(7)])],\n         password:['',Validators.required],\n         code:[this.code],\n    remember:['']\n    })\n   // this.loginWithPhone.get('code').setValue(this.code)\n    if(localStorage.getItem('rememberForEmail')) {\n    let formData = JSON.parse(localStorage.getItem('rememberForEmail'))\n    \n      this.loginwithEmail.patchValue({\n        email: formData.email,\n        password: formData.password,\n        remember: formData.remember\n      })\n    }\n    if(localStorage.getItem('rememberForPhone')) {\n      let formData = JSON.parse(localStorage.getItem('rememberForPhone'))\n      this.loginWithPhone.get('code').setValue(formData.code)\n        this.loginWithPhone.patchValue({\n          phone: formData.phone,\n          password: formData.password,\n          remember: formData.remember\n        })\n      }\n  }\n  ClosePhone(){\n    this.otpFrom()\n  }\n  public errorHandlingSignup = (control: string, error: string) => {\n    return this.loginwithEmail.controls[control].hasError(error);\n  }\n  public errorHandlingphone = (control: string, error: string) => {\n    return this.loginWithPhone.controls[control].hasError(error);\n  }\n  public errorPhoneRecoverForm = (control: string, error: string) => {\n    return this.phoneRecover.controls[control].hasError(error);\n  }\n\n  // someMethod(value)\n  // {\n  //   console.log('Value of code',value,'PhoneCode val',this.code);\n  //   this.countryCode = value;\n  //   this.code = value\n  // }\n  login() {\n  \n    let url = `admin/login`\n    this.submitted = true\n   if(this.loginwithEmail.valid){\n      this.spinner.show()\n      this.submitted = false\n      let data = {\n        email: this.loginwithEmail.value.email,\n        password: this.loginwithEmail.value.password,\n      }\n      this.service.signIn(data).subscribe((response:any) =>{\n        console.log('This is login response',response.data.user)\n        if(response.statusCode==200) {\n          this.submitted = false\n          this.router.navigate(['dashboard']);\n          localStorage.setItem('eSupply', JSON.stringify(response.data.user))\n          localStorage.setItem('token',response.data.user.accessToken)\n          if(this.loginwithEmail.value.remember) {\n            localStorage.setItem('rememberForEmail', JSON.stringify(this.loginwithEmail.value))\n          } else \n          {\n            localStorage.removeItem('rememberForEmail')\n          }\n        \n        }else {\n          Swal.fire('Oops',response.message,'error')\n        }\n        this.spinner.hide()\n      }, error => {\n        this.spinner.hide()\n        Swal.fire('Oops',error.message,'error')\n        \n        console.log(error)\n      })\n   }else if(this.loginwithEmail.invalid){\n      Swal.fire('Oops','Please Enter Required Fields','error')\n      this.spinner.hide()\n    }\n    \n  }\n  phoneLogin(){\n    \n    this.isphoneLogin = true\n   if(this.loginWithPhone.valid){\n      this.spinner.show()\n      this.isphoneLogin = false\n      let data = {\n        phoneNo: this.loginWithPhone.value.phone,\n        password: this.loginWithPhone.value.password,\n        // dialCode:this.countryCode == null ? this.code : this.countryCode\n        dialCode:this.loginWithPhone.value.code\n      }\n      this.service.signIn(data).subscribe((response:any) =>{\n        console.log('This is login response',response.data.user)\n        if(response.statusCode==200) {\n          this.isphoneLogin = false\n          this.router.navigate(['dashboard']);\n          localStorage.setItem('eSupply', JSON.stringify(response.data.user))\n          localStorage.setItem('token',response.data.user.accessToken)\n          if(this.loginWithPhone.value.remember) {\n           \n            localStorage.setItem('rememberForPhone', JSON.stringify(this.loginWithPhone.value))\n          } else \n          {\n            localStorage.removeItem('rememberForPhone')\n          }\n        \n        }else {\n          Swal.fire('Oops',response.message,'error')\n        }\n        this.spinner.hide()\n      }, error => {\n        this.spinner.hide()\n        Swal.fire('Oops',error.message,'error')\n        \n        console.log(error)\n      })\n   }else if(this.loginWithPhone.invalid){\n      Swal.fire('Oops','Please Enter Required Fields','error')\n      this.spinner.hide()\n    }\n}\nrecover() {\n\n  this.isSubmitted = true\n  this.spinner.show()\n  let data = this.recoveryForm.value\n  \n  this.service.forgot(data).subscribe((response:any) => {\n    console.log('Reset',response)\n    this.spinner.hide()\n    if(response.statusCode==200) {\n      this.isSubmitted = false\n      Swal.fire('Success',`Link has been sent to ${this.recoveryForm.value.email}`,'success')\n      this.loginform = !this.loginform;\n      this.recoverform = !this.recoverform;\n    } else {\n      this.recoveryForm.reset()\n      Swal.fire('Oops',response['message'],'error')\n    }\n  }, error => {\n    this.spinner.hide()\n    Swal.fire('Oops',error['message'],'error')\n    console.log(error)\n  })\n}\nrecoverForPhone(content3) {\n\n  this.IsphoneRecover = true\n  this.spinner.show()\n  let data = {\n    \"phoneNo\":this.phoneRecover.value.phone,\n    \"dialCode\":this.phoneRecover.value.CountryCode\n    }\n  \n  this.service.forgotPhone(data).subscribe((response:any) => {\n    console.log('Reset',response)\n    this.spinner.hide()\n    \n    if(response.statusCode==200) {\n      this.openWindowCustomClass(content3)\n      this.IsphoneRecover = false\n      Swal.fire('Success',response.message,'success')\n     \n      // this.loginform = !this.loginform;\n      // this.recoverform = !this.recoverform;\n    } else {\n     // this.phoneRecover.reset()\n      Swal.fire('Oops',response['message'],'error')\n    }\n  }, error => {\n    this.spinner.hide()\n    Swal.fire('Oops',error['message'],'error')\n    console.log(error)\n  })\n}\n// showRecoverForm() {\n//   this.showPasswordRecoveryForm = !this.showPasswordRecoveryForm\n// }\ngotoVerify()\n{\nconsole.log('This is otp',this.otpvalue)\n const data = {\n  \"phoneNo\":this.phoneRecover.value.phone,\n  \"dialCode\":this.phoneRecover.value.CountryCode,\n    \"secretCode\": this.otpvalue\n}\n  this.service.verifyPhone(data).subscribe((res:any)=>\n    {\n      if(res.statusCode == 200)\n      {\n        sessionStorage.setItem('token',res.data.accessToken)\n    \n     // this.router.navigate(['profilesetup'])\n      }\n      else{\n        this.submitted = true;\n        \n       Swal.fire('Oops',res.message,'error')\n      }\n    })\n}\nonOtpChange(event)\n  {\n    this.otpvalue = event\n    console.log(this.otpvalue);\n    \n  }\n  sendOtp(){\n    let obj = {\n      \"phoneNo\":this.phoneRecover.value.phone,\n      \"dialCode\":this.phoneRecover.value.CountryCode\n    }\n    this.service.sentOtp(obj).subscribe((res:any)=>{\n      console.log(res,\"OTP SENT\");\n      if(res.statusCode == 200){\n        Swal.fire('Otp',res.message,'success')\n      }else{\n        Swal.fire('Oops',res.message,'error')\n      }\n    })\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\n    <div class=\"auth-box on-sidebar\">\n        <div *ngIf=\"loginform\" id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\"  /></span>\n                <h5 class=\"font-medium m-b-20 pt-2\">Login for the admin dashboard</h5>\n            </div>\n            <!-- Form -->\n            <ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs custom-tab\">\n                <li ngbNavItem>\n                  <a ngbNavLink class=\"text-white\">Login with email</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" id=\"loginform\" [formGroup]=\"loginwithEmail\">\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                                    </div>\n                                    <input type=\"text\" formControlName=\"email\" class=\"form-control form-control-lg\" placeholder=\"Email\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\n                                    \n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                                    </div>\n                                    <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\n                                </div>\n                                \n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" formControlName=\"remember\" class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                            <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group text-center\">\n                                    <div class=\"col-xs-12 p-b-20\">\n                                        <button  class=\"btn btn-block btn-lg btn-theme\" type=\"submit\" (click)=\"login()\">Log In</button>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"row\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                        <div class=\"social\">\n                                            <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\n                                            <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <!-- <div class=\"form-group m-b-0 m-t-10\">\n                                    <div class=\"col-sm-12 text-center\">\n                                        Don't have an account? <a href=\"#/authentication/signup2\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\n                                    </div>\n                                </div> -->\n                            </form>\n                        </div>\n                    </div>  \n\n                  </ng-template>\n                </li>\n                <li ngbNavItem [ngClass]=\"{'active':phonecode}\">\n                  <a ngbNavLink class=\"text-white\">Login with phone no.</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" id=\"loginform1\" [formGroup]=\"loginWithPhone\">\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                      <select class=\"form-control form-control-lg\"  formControlName=\"code\">\n                                        <option *ngFor=\"let code of countrycode\" [value]=\"code.dial_code\"> {{code.dial_code}}</option>\n                                          </select>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Phone no.\" formControlName=\"phone\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" formControlName=\"password\"aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" formControlName=\"remember\"class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                            <a (click)=\"otpFrom()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group text-center\">\n                                    <div class=\"col-xs-12 p-b-20\">\n                                        <button  class=\"btn btn-block btn-lg btn-theme\" type=\"submit\" (click)=\"phoneLogin()\">Log In</button>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"row\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                        <div class=\"social\">\n                                            <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\n                                            <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\n                                        </div>\n                                    </div>\n                                </div> -->\n                               \n                            </form>\n                        </div>\n                    </div>\n                  </ng-template>\n                </li>\n              </ul>\n              <div [ngbNavOutlet]=\"nav\"></div>\n              <div class=\"form-group m-b-0 m-t-10\">\n                <div class=\"col-sm-12 text-center text-white\">\n                    Don't have an account? <a routerLink=\"/signup2\" class=\"text-white m-l-5\"><b>Sign Up</b></a>\n                </div>\n            </div>\n            <div class=\"err_box\">\n                <p class=\"text-danger\"\n                *ngIf=\"submitted && errorHandlingSignup('email', 'required')\">\n                Email is required!\n            </p>\n                <p class=\"text-danger\"\n                *ngIf=\"errorHandlingSignup('email', 'pattern')\">\n                Email is invalid!\n            </p>\n                <p class=\"text-danger\"\n                *ngIf=\"submitted && errorHandlingSignup('password', 'required')\">\n                Password is required!\n            </p>\n            <p class=\"text-danger\"\n            *ngIf=\"isphoneLogin && errorHandlingphone('phone', 'required')\">\n            Phone number is required!\n        </p>\n            <p class=\"text-danger\"\n            *ngIf=\"errorHandlingphone('phone', 'pattern')\">\n            Phone number is invalid!\n        </p>\n        <p class=\"text-danger\"\n            *ngIf=\"errorHandlingphone('phone', 'maxlength')\">\n            Maximum length of phone number should be 15!\n        </p>\n        <p class=\"text-danger\"\n            *ngIf=\"errorHandlingphone('phone', 'minlength')\">\n            Minimum length of phone number should be 7!\n        </p>\n            <p class=\"text-danger\"\n            *ngIf=\"isphoneLogin && errorHandlingphone('password', 'required')\">\n            Password is required!\n        </p>\n            </div>\n            \n        </div>\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\" [formGroup]=\"recoveryForm\">\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Email\" formControlName=\"email\">\n                            <p class=\"text-white\" *ngIf=\"isSubmitted && recoveryForm.controls['email'].errors?.required\">This field is required</p>\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-info text-white\" type=\"button\" name=\"action\" (click)=\"CancelForgot()\">Cancel</button>\n                        </div>\n                    </div>\n                    <div class=\"row m-t-20\">\n        \n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-info text-white\" type=\"button\" name=\"action\" (click)=\"recover()\">Reset</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n           <div *ngIf=\"loginform1\" id=\"otp\" [ngClass]=\"{'d-block': otp}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your phone number and OTP will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\" [formGroup]=\"phoneRecover\" >\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <div class=\"input-group mb-3\">\n                                <div class=\"input-group-prepend\">\n                                  <select class=\"form-control form-control-lg\" formControlName=\"CountryCode\">\n                                    <option *ngFor=\"let code of countrycode;\" [value]=\"code.dial_code\"> {{code.dial_code}}</option>\n                                      </select>\n                                </div>\n                                <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Phone no.\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required formControlName=\"phone\">\n                                \n                            </div>\n                            <p class=\"text-white\"\n                                *ngIf=\"IsphoneRecover && errorPhoneRecoverForm('phone', 'required')\">\n                                Phone number is required!\n                            </p>\n                                <p class=\"text-white\"\n                                *ngIf=\"errorPhoneRecoverForm('phone', 'pattern')\">\n                                Phone number is invalid!\n                            </p>\n                            <p class=\"text-white\"\n                                *ngIf=\"errorPhoneRecoverForm('phone', 'maxlength')\">\n                                Maximum length of phone number should be 15!\n                            </p>\n                            <p class=\"text-white\"\n                                *ngIf=\"errorPhoneRecoverForm('phone', 'minlength')\">\n                                Minimum length of phone number should be 7!\n                            </p>\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-info text-white\" type=\"submit\" name=\"action\" (click)=\"ClosePhone()\">Cancel</button>\n                        </div>\n                    </div>\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-info text-white\" type=\"submit\" name=\"action\" (click)=\"recoverForPhone(content3)\">Send</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #content3 let-modal>\n   \n    <div class=\"modal-body\"> \n        <button class=\"close-icon\" (click)=\"modal.dismiss()\"><i class=\"mdi mdi-close\"></i></button>\n        <h3>OTP</h3>\n        <ng-otp-input  class=\"otp-box\" (onInputChange)=\"onOtpChange($event)\"  [config]=\"{length:4}\"></ng-otp-input>\n        <div class=\"d-flex mt-3 align-items-center\">\n            <button class=\"btn btn-primary\"  (click)=\"gotoVerify()\">Submit</button>\n            <a href=\"javascript:void()\" class=\"ml-auto\" (click)=\"sendOtp()\">Resend</a>\n        </div>\n    </div>\n  \n  </ng-template> ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html'\n})\nexport class SignupComponent {\n  constructor() {}\n\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <!-- <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span> -->\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                        <div class=\"form-group row \">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12 \">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center \">\n                            <div class=\"col-xs-12 p-b-20 \">\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\n                            </div>\n                        </div>\n                        <div class=\"form-group m-b-0 m-t-10 \">\n                            <div class=\"col-sm-12 text-center \">\n                                Already have an account? <a href=\"#/authentication/login \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n//import {SharedService} from ''\nimport { SharedService } from '../shared.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup2.component.html',\n  styleUrls: ['./signup2.scss']\n})\nexport class Signup2Component implements OnInit{\n  countrycode: any;\n  phonecode: any;\n  submitted:boolean = false\n  signUpWithEmail:FormGroup\n  countryCode: any;\n  signUpWithPhone:FormGroup \n  constructor(private service:SharedService,private fb:FormBuilder,private router:Router,private spinner:NgxSpinnerService) {\n    this.service.getJson().subscribe((res:any)=>\n      {\n        this.countrycode = res.countryArray\n        this.phonecode = res.countryArray[0].dial_code\n      })\n  }\n  ngOnInit(){\n    this.signUpWithEmail = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n         password:['',[Validators.required,Validators.minLength(8)]],\n         firstName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n         lastName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n         confirmPassword:['',Validators.required]\n    })\n    this.signUpWithPhone = this.fb.group({\n      phone:['',Validators.compose([Validators.required,Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')\n        ,Validators.maxLength(15),Validators.minLength(7)])],\n        password:['',[Validators.required,Validators.minLength(8)]],\n        email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n        firstName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        lastName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        \n        confirmPassword:['',Validators.required]\n    })\n  }\n  public errorHandlingSignup = (control: string, error: string) => {\n    return this.signUpWithEmail.controls[control].hasError(error);\n  }\n  public errorHandlingphone = (control: string, error: string) => {\n    return this.signUpWithPhone.controls[control].hasError(error);\n  }\n  someMethod(value)\n  {\n    console.log('Value of code',value,'PhoneCode val',this.phonecode);\n    this.countryCode = value;\n  }\n  signUpEmail(){\n    this.spinner.show()\n    let url = `admin/register/shop`\n    this.submitted = true;\n    const data =\n    {\n      \"firstName\":this.signUpWithEmail.controls['firstName'].value,\n      \"lastName\":this.signUpWithEmail.controls['lastName'].value,\n      \"email\":this.signUpWithEmail.controls['email'].value,\n      \n      \"password\":this.signUpWithEmail.controls['password'].value,\n      \"confirmPassword\":this.signUpWithEmail.controls['password'].value,\n     // \"dialCode\":this.countryCode == null ? this.phonecode : this.countryCode\n    }\n    if(!this.signUpWithEmail.invalid)\n    {\n      this.service.signUp(url,data).subscribe((res:any)=>\n      {\n        console.log('Res of signup',res);\n        \n        if(res.statusCode == 200)\n        {\n          this.spinner.hide()\n          Swal.fire('Success',res.message,'success')\n          sessionStorage.setItem('token',res.data.accessToken)\n          this.router.navigate(['dashboard'])\n          this.submitted = false\n        }\n        else{\n          this.spinner.hide()\n        Swal.fire('Oops',res.message,'error') \n        \n        }\n      })\n    }else if(this.signUpWithEmail.invalid){\n      this.spinner.hide()\nSwal.fire('Oops','Please fill all field correctly','error')\n\n    }\n  }\n  phoneSignUp(){\nthis.spinner.show()\n    let url = `admin/register/shop`\n    this.submitted = true;\n    const data =\n    {\n      \"firstName\":this.signUpWithPhone.controls['firstName'].value,\n      \"lastName\":this.signUpWithPhone.controls['lastName'].value,\n      \"email\":this.signUpWithPhone.controls['email'].value,\n      \"phoneNo\":this.signUpWithPhone.controls['phone'].value,\n      \"password\":this.signUpWithPhone.controls['password'].value,\n      \"confirmPassword\":this.signUpWithPhone.controls['password'].value,\n     \"dialCode\":this.countryCode == null ? this.phonecode : this.countryCode\n    }\n    if(!this.signUpWithPhone.invalid)\n    {\n      this.service.signUp(url,data).subscribe((res:any)=>\n      {\n        console.log('Res of signup with phone',res);\n        \n        if(res.statusCode == 200)\n        {\n          this.spinner.hide()\n          Swal.fire('Success',res.message,'success')\n          sessionStorage.setItem('token',res.data.accessToken)\n          this.router.navigate(['dashboard'])\n        }\n        else{\n          this.spinner.hide()\n        Swal.fire('Oops',res.message,'error') \n        \n        }\n      })\n    }else if(this.signUpWithPhone.invalid){\n      this.spinner.hide()\nSwal.fire('Oops','Please fill all field correctly','error')\n    }\n\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\n    <div class=\"auth-box on-sidebar\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20 pt-2\">Register for the admin dashboard</h5>\n            </div>\n            <!-- Form -->\n            <ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs custom-tab\">\n                <li ngbNavItem class=\"\">\n                  <a ngbNavLink class=\"text-white\">Sign up with email</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" [formGroup]=\"signUpWithEmail\">\n                                <div class=\"form-group row cstm_fld mb-0\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" (keydown.space)=\"$event.preventDefault()\"type=\"text\" placeholder=\"First Name\" formControlName=\"firstName\">\n                                        <p class=\"erroe_msg\"\n                *ngIf=\"submitted && errorHandlingSignup('firstName', 'required')\">First name is required!</p>\n                <p class=\"erroe_msg\"\n                *ngIf=\"errorHandlingSignup('firstName', 'pattern')\"> First name should alphabetic only!</p>\n                                    </div>\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"Last Name\"(keydown.space)=\"$event.preventDefault()\" formControlName=\"lastName\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingSignup('lastName', 'required')\">Last name is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingSignup('lastName', 'pattern')\">Last name should alphabetic only!</p>\n                                    </div>\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\" formControlName=\"email\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingSignup('email', 'required')\">Email is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingSignup('email', 'pattern')\">Email is not valid!</p>\n                                    </div>\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingSignup('password', 'required')\">Password is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingSignup('password', 'minlength')\">Minlength of password should 8!</p>\n                                    </div>\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\">\n                                        <p class=\"erroe_msg\"\n                                *ngIf=\"submitted && errorHandlingSignup('confirmPassword', 'required')\">\n                                Confirm password is required!\n                                    </p>\n                            <p class=\"erroe_msg\"\n                                *ngIf=\"(signUpWithEmail.get('confirmPassword').value.length>0) && signUpWithEmail.get('password').value !=  signUpWithEmail.get('confirmPassword').value\">\n                                Password mismatched!\n                                </p>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group row\">\n                                    <div class=\"col-md-12 \">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\" class=\"text-white\">Terms</a></label>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"form-group text-center \">\n                                    <div class=\"col-xs-12 mb-0\">\n                                        <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"signUpEmail()\">SIGN UP</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                  </ng-template>\n                </li>\n                <li ngbNavItem>\n                  <a ngbNavLink class=\"text-white \">Sign up with phone no.</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" [formGroup]=\"signUpWithPhone\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" type=\"text\" placeholder=\"First Name\" (keydown.space)=\"$event.preventDefault()\"formControlName=\"firstName\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('firstName', 'required')\">First name is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('firstName', 'pattern')\">First name should alphabetic only!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" formControlName=\"lastName\"type=\"text\" (keydown.space)=\"$event.preventDefault()\" placeholder=\"Last Name\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('lastName', 'required')\">Last name is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('lastName', 'pattern')\">Last name should alphabetic only!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row \">\n                                    <div class=\"col-12 \">\n                                        <!-- <input class=\"form-control form-control-lg\" type=\"text\" required=\"\"  placeholder=\"Phone No.\"> -->\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                              <select class=\"form-control form-control-lg\" (change)=\"someMethod($event.target.value)\">\n                                                <option *ngFor=\"let code of countrycode\" [value]=\"code.dial_code\"> {{code.dial_code}}</option>\n                                                  </select>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Phone no.\"  \n                                            aria-label=\"Username\" aria-describedby=\"basic-addon1\" formControlName=\"phone\">\n                                          \n                                        </div>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('phone', 'required')\">\n                                        Phone number is required!\n                                    </p>\n                                    <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('phone', 'maxlength')\">\n                                        Maximum length should 15!\n                                </p>\n                                    <p class=\"erroe_msg\"\n                                    *ngIf=\"errorHandlingphone('phone', 'minlength')\">\n                                    Minimum length should 7!\n                            </p>\n                                <p class=\"erroe_msg\"\n                                    *ngIf=\"errorHandlingphone('phone', 'pattern')\">\n                                    Please enter valid phone no!\n                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12\">\n                                        <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\" formControlName=\"email\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('email', 'required')\">Email is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('email', 'pattern')\">Email is not valid!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" formControlName=\"password\" type=\"password\" required=\" \" placeholder=\"Password\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('password', 'required')\">Password is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('password', 'minlength')\">Minlength of password should 8!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" formControlName=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('confirmPassword', 'required')\">\n                                        Confirm password is required!\n                                            </p>\n                                    <p class=\"erroe_msg\"\n                                        *ngIf=\"(signUpWithPhone.get('confirmPassword').value.length>0) && signUpWithPhone.get('password').value !=  signUpWithPhone.get('confirmPassword').value\">\n                                        Password mismatched!\n                                        </p>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group row\">\n                                    <div class=\"col-md-12 \">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\" class=\"text-white\">Terms</a></label>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"form-group text-center \">\n                                    <div class=\"col-xs-12 p-b-20 \">\n                                        <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"phoneSignUp()\">SIGN UP</button>\n                                    </div>\n                                    <div class=\"form-group m-b-0 m-t-10 \">\n                                        <div class=\"col-sm-12 text-center text-white\">\n                                            Already have an account? <a routerLink=\"/login\" class=\"text-white m-l-5 \"><b>Sign In</b></a>\n                                        </div>\n                                    </div>\n                                </div>\n                               \n                            </form>\n                        </div>\n                    </div>\n                  </ng-template>\n                </li>\n              </ul>\n              <div [ngbNavOutlet]=\"nav\"></div>\n              <div class=\"form-group m-b-0 m-t-10 \">\n                <div class=\"col-sm-12 text-center text-white\">\n                    Already have an account? <a routerLink=\"/login\" class=\"text-white m-l-5 \"><b>Sign In</b></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]}