{"version":3,"sources":["webpack:///node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","webpack:///src/app/authentication/404/not-found.component.ts","webpack:///src/app/authentication/404/not-found.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/authentication.routing.ts","webpack:///src/app/authentication/detail-form/detail-form.component.ts","webpack:///src/app/authentication/detail-form/detail-form.component.html","webpack:///src/app/authentication/lock/changepassword.component.ts","webpack:///src/app/authentication/lock/changepassword.component.html","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/login2/login2.component.ts","webpack:///src/app/authentication/login2/login2.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup2/signup2.component.ts","webpack:///src/app/authentication/signup2/signup2.component.html"],"names":["NgOtpInputComponent_div_0_input_1_Template","rf","ctx","_r5","NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener","$event","ctx_r4","onKeyDown","NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener","i_r3","index","ctx_r6","onKeyUp","item_r2","$implicit","ctx_r1","config","inputClass","componentKey","allowNumbersOnly","inputType","placeholder","inputStyles","otpForm","controls","NgOtpInputComponent_div_0_Template","ctx_r0","containerClass","containerStyles","KeysPipe","value","Object","keys","ɵfac","KeysPipe_Factory","t","ɵpipe","name","type","pure","args","Config","NgOtpInputComponent","keysPipe","length","onInputChange","inputControls","Array","Math","random","toString","substring","Date","getTime","addControl","getControlName","getInputType","disableAutoFocus","containerItem","document","getElementById","addEventListener","evt","handlePaste","ele","getElementsByClassName","focus","idx","event","ifKeyCode","key","targetCode","keyCode","charCode","isSpace","inputIdx","nextInputId","appendKey","prevInputId","ifRightArrow","setSelected","ifLeftArrow","isBackspace","ifBackspaceOrDelete","target","rebuildValue","ifValidEntry","id","eleId","focusTo","setSelectionRange","setTimeout","inp","String","fromCharCode","isMobile","test","navigator","userAgent","allowKeyCodes","includes","isNaN","reset","replace","from","forEach","c","get","setValue","indexOfElementToFocus","val","transform","k","emit","isPasswordInput","e","clipboardData","window","pastedData","getData","stopPropagation","preventDefault","NgOtpInputComponent_Factory","ɵcmp","selectors","inputs","outputs","decls","vars","consts","template","NgOtpInputComponent_Template","directives","NumberOnlyDirective","pipes","styles","ctorParameters","propDecorators","selector","_elRef","_renderer","disabledNumberOnly","setAttribute","nativeElement","NumberOnlyDirective_Factory","ɵdir","NgOtpInputModule","ɵmod","ɵinj","factory","NgOtpInputModule_Factory","providers","imports","ngJitMode","declarations","exports","NotfoundComponent","templateUrl","AuthenticationModule","forChild","AuthenticationRoutes","path","children","component","DetailFormComponent","router","spinner","act","service","fb","days","submitted","lat","lng","fileName","address","minAge","errorHandling","control","error","profileForm","hasError","errorHandlingphone","formForShop","today","getFullYear","getMonth","getDate","getJson","subscribe","res","countrycode","countryArray","phonecode","dial_code","params","role","getProfile","group","email","required","pattern","firstName","lastName","resturant","dob","zip","minLength","maxLength","image","city","isDelivery","resturantType","regx","dialCode","phone","compose","location","ref","startTime","split","endTime","show","url","obj","files","valid","putApi","console","log","statusCode","navigate","hide","subject","next","fire","message","invalid","fileData","formdata","FormData","append","postApi","data","filePath","ProfilePic","self","sendFile","reader","FileReader","countryCode","checked","row","createElement","className","innerHTML","querySelector","appendChild","removed","getApi","profileData","pop","birthDate","shopName","zipCode","typeOfRestaurant","deliveringRightNow","coordinates","phoneNo","geometry","state","address_components","long_name","styleUrls","changepasswordComponent","toaster","authService","history","isSubmitted","errorHandlingSignup","form","oldPassword","newPassword","confirmNewPassword","changePassword","response","save","LoginComponent","loginform","recoverform","showRecoverForm","Login2Component","modalService","formSubmitted","IsphoneRecover","isphoneLogin","loginform1","otp","loginwithEmail","loginWithPhone","errorPhoneRecoverForm","phoneRecover","code","content","open","backdropClass","centered","size","content3","CountryCode","recoveryForm","password","remember","localStorage","getItem","formData","JSON","parse","patchValue","back","dismissAll","otpFrom","signIn","user","setItem","stringify","accessToken","removeItem","forgot","forgotPhone","openWindowCustomClass","otpvalue","verifyPhone","sessionStorage","openModal","sentOtp","err","ResetPassword","CancelForgot","recover","SignupComponent","Signup2Component","signUpWithEmail","signUpWithPhone","confirmPassword","signUp"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass Config {\r\n}\r\nif (false) {\r\n    /** @type {?} */\r\n    Config.prototype.inputStyles;\r\n    /** @type {?} */\r\n    Config.prototype.containerStyles;\r\n    /** @type {?} */\r\n    Config.prototype.allowKeyCodes;\r\n    /** @type {?} */\r\n    Config.prototype.length;\r\n    /** @type {?} */\r\n    Config.prototype.allowNumbersOnly;\r\n    /** @type {?} */\r\n    Config.prototype.inputClass;\r\n    /** @type {?} */\r\n    Config.prototype.containerClass;\r\n    /** @type {?} */\r\n    Config.prototype.isPasswordInput;\r\n    /** @type {?} */\r\n    Config.prototype.disableAutoFocus;\r\n    /** @type {?} */\r\n    Config.prototype.placeholder;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputComponent {\r\n    /**\r\n     * @param {?} keysPipe\r\n     */\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (/**\r\n                 * @param {?} evt\r\n                 * @return {?}\r\n                 */\r\n                (evt) => this.handlePaste(evt)));\r\n                /** @type {?} */\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @private\r\n     * @param {?} idx\r\n     * @return {?}\r\n     */\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} targetCode\r\n     * @return {?}\r\n     */\r\n    ifKeyCode(event, targetCode) {\r\n        /** @type {?} */\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @return {?}\r\n     */\r\n    onKeyDown($event) {\r\n        /** @type {?} */\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} $event\r\n     * @param {?} inputIdx\r\n     * @return {?}\r\n     */\r\n    onKeyUp($event, inputIdx) {\r\n        /** @type {?} */\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        /** @type {?} */\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        /** @type {?} */\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                ele.setSelectionRange(0, 1);\r\n            }), 0);\r\n        }\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    ifValidEntry(event) {\r\n        /** @type {?} */\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        /** @type {?} */\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    /**\r\n     * @param {?} eleId\r\n     * @return {?}\r\n     */\r\n    focusTo(eleId) {\r\n        /** @type {?} */\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((/**\r\n         * @param {?} c\r\n         * @param {?} idx\r\n         * @return {?}\r\n         */\r\n        (c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        }));\r\n        if (!this.config.disableAutoFocus) {\r\n            /** @type {?} */\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            /** @type {?} */\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            /** @type {?} */\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    rebuildValue() {\r\n        /** @type {?} */\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach((/**\r\n         * @param {?} k\r\n         * @return {?}\r\n         */\r\n        k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                val += this.otpForm.controls[k].value;\r\n            }\r\n        }));\r\n        this.onInputChange.emit(val);\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        /** @type {?} */\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            /** @type {?} */\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/** @nocollapse */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:1px solid #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width:767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width:420px){.otp-input{width:30px;font-size:18px;height:30px}}\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.config;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.onInputChange;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.otpForm;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputControls;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.componentKey;\r\n    /** @type {?} */\r\n    NgOtpInputComponent.prototype.inputType;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NgOtpInputComponent.prototype.keysPipe;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NumberOnlyDirective {\r\n    /**\r\n     * @param {?} _elRef\r\n     * @param {?} _renderer\r\n     */\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/** @nocollapse */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\r\nif (false) {\r\n    /** @type {?} */\r\n    NumberOnlyDirective.prototype.disabledNumberOnly;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._elRef;\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    NumberOnlyDirective.prototype._renderer;\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { NgOtpInputModule, NgOtpInputComponent as ɵa, KeysPipe as ɵb, NumberOnlyDirective as ɵc };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { Component, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html'\n})\nexport class NotfoundComponent implements AfterViewInit {\n  ngAfterViewInit() {}\n}\n","<div class=\"error-box\">\n    <div class=\"error-body text-center\">\n        <h1 class=\"error-title text-danger\">404</h1>\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\n        <a href=\"#/dashboard/classic\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { changepasswordComponent } from './lock/changepassword.component'; \nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Signup2Component } from './signup2/signup2.component';\n\nimport { AuthenticationRoutes } from './authentication.routing';\nimport { DetailFormComponent } from './detail-form/detail-form.component';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { NgOtpInputModule } from  'ng-otp-input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { GooglePlaceModule } from 'ngx-google-places-autocomplete';\n@NgModule({\n  imports: [\n    CommonModule, \n    RouterModule.forChild(AuthenticationRoutes),\n    NgbModule,\n    MatSlideToggleModule,\n    NgOtpInputModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSpinnerModule,\n    GooglePlaceModule\n  ],\n  declarations: [\n    NotfoundComponent,\n    LoginComponent,\n    SignupComponent,\n    changepasswordComponent,\n    Login2Component,\n    Signup2Component,\n    DetailFormComponent\n  ],\n // providers: []\n})\nexport class AuthenticationModule {}\n","import { Routes } from '@angular/router';\n\nimport { NotfoundComponent } from './404/not-found.component';\nimport { DetailFormComponent } from './detail-form/detail-form.component';\nimport { changepasswordComponent } from './lock/changepassword.component';\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Signup2Component } from './signup2/signup2.component';\n\nexport const AuthenticationRoutes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: '404',\n        component: NotfoundComponent\n      },\n      {\n        path: 'changepassword',\n        component: changepasswordComponent\n      },\n      {\n        path: 'login2',\n        component: LoginComponent\n      },\n      {\n        path: 'login',\n        component: Login2Component\n      },\n      {\n        path: 'signup',\n        component: SignupComponent\n      },\n      {\n        path: 'signup2',\n        component: Signup2Component\n      },\n      {\n        path: 'vendor_detail/:role',\n        component: DetailFormComponent\n      },\n    ]\n  }\n];\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\nimport { SharedService } from '../shared.service';\nimport { GooglePlaceDirective } from 'ngx-google-places-autocomplete';\n@Component({\n  selector: 'app-detail-form',\n  templateUrl: './detail-form.component.html',\n  styleUrls: ['./detail-form.component.css']\n})\nexport class DetailFormComponent implements OnInit ,AfterViewInit{\n  checked:string;\n  profileForm:FormGroup\n  formForShop:FormGroup\n  days:string[]=['sun','mon','tue','wed','thu','fri','sat']\n  role: any;\n  countrycode: any;\n  phonecode: any;\n  startTime:number;\n  endTime:number;\n  countryCode: any;\n  submitted:boolean = false\n  lat:any = 40.7127753;\n  lng:any = -74.0059728;\n  fileName:string = 'Choose file'\n  @ViewChild(\"placeRef\") \n  state: any;\n  \n  @ViewChild(\"placesRef\", { static: true }) placesRef: GooglePlaceDirective;\n  \n  profileData: any;\n  files: any;\n  ProfilePic:any;\n  address:any='Mohali, Punjab, India'\n  minAge: any = 18;\n    constructor(private router:Router,private spinner:NgxSpinnerService,private act:ActivatedRoute,public service:SharedService,private fb:FormBuilder) { \n      var today = new Date();\n      this.minAge = new Date(today.getFullYear() - this.minAge, today.getMonth(), today.getDate());\n     \n      this.service.getJson().subscribe((res:any)=>\n      {\n        this.countrycode = res.countryArray\n        this.phonecode = res.countryArray[0].dial_code\n      })\n      this.act.params.subscribe((res:any)=>{\n        this.role = res.role\n      })\n    }\n  ngAfterViewInit(){\n    \n    this.getProfile()\n\n  }\n    ngOnInit(): void {\n      this.service.getJson().subscribe((res:any)=>\n      {\n        this.countrycode = res.countryArray\n        this.phonecode = res.countryArray[0].dial_code\n      })\n      \n  this.getProfile()\n      this.profileForm = this.fb.group({\n        email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n        firstName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        lastName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        resturant:['',[Validators.required]],\n        dob:['',Validators.required],\n        zip:['',[Validators.required,Validators.pattern(/^([0-9])*$/),Validators.minLength(4),Validators.maxLength(7)]],\n        image:['',Validators.required],\n        address:['',Validators.required],\n        city:['',Validators.required],\n        isDelivery:['',Validators.required],\n        // openTime:['',Validators.required],\n        // closeTime:['',Validators.required],\n        resturantType:['',Validators.required]\n      })\n      var regx = /^(\\w+)( \\w+)*$/;\n      this.formForShop = this.fb.group({\n        email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n        firstName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        lastName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        dialCode:[''],\n        dob:['',Validators.required],\n        phone:['',Validators.compose([Validators.required,Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')\n        ,Validators.maxLength(15),Validators.minLength(7)])],\n        location:['',[Validators.required,Validators.pattern(regx)]],\n        address:['',[Validators.required]],\n        // openTime:['',Validators.required],\n        // closeTime:['',Validators.required],\n        image:['',Validators.required],\n      \n      })\n      \n    }\n    public errorHandling = (control: string, error: string) => {\n      return this.profileForm.controls[control].hasError(error);\n    }\n    IsSelectedTime(e,ref){\n      if(ref=='start'){\n        this.startTime = e.target.value.split(\":\")[0]*60 + e.target.value.split(\":\")[1]\n      }else if(ref=='end'){\n        this.endTime = e.target.value.split(\":\")[0]*60 + e.target.value.split(\":\")[1]\n      }\n      \n    }\n    updateFranchaise(){\n      this.submitted = true\n      this.spinner.show()\n      let url = `admin/updateProfile`\n   let obj =   {\n    \"city\": this.profileForm.value.city,\n    \"email\":this.profileForm.value.email,\n  // \"openTime\":this.profileForm.value.openTime,\n  // \"closeTime\":this.profileForm.value.closeTime,\n    \"firstName\": this.profileForm.value.firstName,\n    \"lastName\": this.profileForm.value.lastName,\n    \"birthDate\": this.profileForm.value.dob,\n    \"shopName\": this.profileForm.value.resturant,\n    \"address\": this.profileForm.value.address,\n    \"zipCode\": this.profileForm.value.zip,\n    \"deliveringRightNow\": this.profileForm.value.isDelivery,\n    \"typeOfRestaurant\": this.profileForm.value.resturantType,\n    \"image\": this.files,\n        \"latitude\":this.lat.toString(),\n        \"longitude\":this.lng.toString(),\n        \n    }\n    if(this.profileForm.valid){\n      this.service.putApi(url,obj).subscribe((res:any)=>{\n        console.log(\"Update profile\",res)\n        if(res.statusCode==200){\n          this.router.navigate(['dashboard'])\n          this.spinner.hide()\n          this.submitted = false\n          this.service.subject.next(true)\n         \n          Swal.fire('Success',res.message,'success')\n        }else{\n          this.spinner.hide()\n          Swal.fire('Oops',res.message,'error')\n        }\n      },error=>{\n        this.spinner.hide()\n        Swal.fire('Oops','Something went wrong','error')\n      })\n    }else if(this.profileForm.invalid){\n      this.spinner.hide()\n     // Swal.fire('Oops','Please fill all field correctly','error')\n    }\n    }\n\n    sendFile(fileData) {\n      let url = `admin/uploadFile`\n      this.spinner.show()\n      let formdata = new FormData()\n      formdata.append('file', fileData);\n      // formdata.append('type','profilePic')\n      this.service.postApi(url, formdata).subscribe((res: any) => {\n        this.spinner.hide()\n        console.log(res.data)\n        if (res.statusCode==200) {\n          // this.service.subject.next(true)\n       Swal.fire('Success','File uploaded','success')\n          console.log(\"upload data res=>>\", res.data)\n          this.files = res.data.filePath\n          this.ProfilePic = res.data.filePath\n        } else {\n          this.spinner.hide()\n          Swal.fire('Oops',res.message,'error')\n        }\n      }, error => {\n        \n        Swal.fire('Oops',error.message,'error')\n        this.spinner.hide()\n      });\n    }\n    uploadFile(event) {\n      \n      var self = this;\n      if (event.target.files && event.target.files[0]) {\n        var type = event.target.files[0].type;\n        if (type === 'image/png' || type === 'image/jpg' || type === 'image/jpeg') {\n          let fileData = event.target.files[0];\n          this.fileName = fileData.name\n          this.sendFile(fileData)\n           var reader = new FileReader()\n           this.profileForm.get('image').setValue(fileData)\n           this.formForShop.get('image').setValue(fileData)\n        } else {\n          \n        }\n      }\n    }\n    someMethod(value)\n  {\n    console.log('Value of code',value,'PhoneCode val',this.phonecode);\n    this.countryCode = value;\n  }\n    check(e,ref){\n      if(ref=='mon' && e.checked){\n         this.checked = 'mon'\n        }\n        else if(ref=='sun' && e.checked){\n          this.checked = 'sun'\n          if(ref=='sun' && !e.checked){\n            this.checked = 'xyx'\n          }\n        }\n      }\n      public errorHandlingphone = (control: string, error: string) => {\n        return this.formForShop.controls[control].hasError(error);\n      }\n    add(){ \n      let row = document.createElement('div');   \n        row.className = 'row mb-2'; \n        row.innerHTML = ` \n        <div class=\"col-md-5\">\n        <input type=\"time\" placeholder=\"\" class=\"form-control\">\n      </div>\n      <div class=\"col-md-5\"><input type=\"time\" placeholder=\"\" class=\"form-control\"></div>\n      <div class=\"col-md-2\"><a href=\"javascript:void(0)\" ><i class=\"far fa-times-circle\"></i></a></div>\n        `; \n        document.querySelector('.showInputField').appendChild(row); \n    } \n    remove(){\n      let removed = document.querySelector('.row.mb-2'); \n      console.log(removed);\n    }\n    getProfile(){\n  \n      this.service.getApi(`admin/getProfile`).subscribe((res:any)=>{\n        console.log('Res of get profile ',res)\n        if(res.statusCode==200){\n          this.profileData = res.data\n          this.ProfilePic = res.data.image,\n          this.files = res.data.image\n          this.fileName = this.profileData.image.split('/').pop()\n          this.profileForm.get('firstName').setValue(res.data.firstName)\n          this.profileForm.get('lastName').setValue(res.data.lastName)\n          this.profileForm.get('email').setValue(res.data.email)\n          this.profileForm.get('dob').setValue(res.data.birthDate)\n          this.profileForm.get('resturant').setValue(res.data.shopName)\n          \n          this.profileForm.get('image').setValue(res.data.image)\n          this.profileForm.get('zip').setValue(res.data.zipCode)\n          this.profileForm.get('resturantType').setValue(res.data.typeOfRestaurant)\n          this.profileForm.get('address').setValue(res.data.location.address)\n          this.profileForm.get('city').setValue(res.data.city)\n          this.profileForm.get('isDelivery').setValue(res.data.deliveringRightNow)\n        \n          this.lat = this.profileData.location.coordinates[1];\n        this.lng = this.profileData.location.coordinates[0];\n        this.formForShop.get('firstName').setValue(res.data.firstName)\n          this.formForShop.get('lastName').setValue(res.data.lastName)\n          this.formForShop.get('email').setValue(res.data.email)\n          this.formForShop.get('dob').setValue(res.data.birthDate)\n          this.formForShop.get('location').setValue(res.data.city)\n          this.formForShop.get('phone').setValue(res.data.phoneNo)\n          this.formForShop.get('dialCode').setValue(res.data.dialCode?res.data.dialCode:this.phonecode)\n          this.formForShop.get('address').setValue(res.data.location.address)\n          \n        }\n        else {\n          Swal.fire('Oops',res.message,'error')\n        }\n      })\n    }\n    public AddressChange(address: any,ref:any) {\n      //setting address from API to local variable\n      console.log('Address',address,\"Ref\",ref);\n      this.address = ref\n      this.profileForm.controls['address'].setValue(ref)\n      this.formForShop.controls['address'].setValue(ref)\n      this.lat = address.geometry.location.lat()\n      this.lng = address.geometry.location.lng()\n     // let length = address.address_components.length\n      //this.country = address.address_components[0].long_name;\n      this.state = address.address_components[0].long_name;\n      ///this.profileForm.controls['address'].setValue(this.state)\n      console.log('Lng',this.lng,'lat',this.lat);\n  \n    }\n    updateProfile(){\n      this.submitted = true\n      this.spinner.show()\n      let url = `admin/updateProfile`\n   let obj =   {\n        \n        \"email\":this.formForShop.value.email,\n  //       \"openTime\":this.formForShop.value.openTime,\n  // \"closeTime\":this.formForShop.value.closeTime,\n        \"firstName\": this.formForShop.value.firstName,\n        \"lastName\": this.formForShop.value.lastName,\n        \"birthDate\": this.formForShop.value.dob,\n        \"city\": this.formForShop.value.location,\n      //  \"shopName\": this.formForShop.value.resturant,\n        \"address\": this.formForShop.value.address,\n        \n      \"phoneNo\":this.formForShop.controls['phone'].value,\n      \"image\": this.files,\n     \"dialCode\":this.countryCode == null ? this.phonecode : this.countryCode,\n        \"latitude\":this.lat.toString(),\n        \"longitude\":this.lng.toString(),\n        \n    }\n    if(this.formForShop.valid){\n      this.service.putApi(url,obj).subscribe((res:any)=>{\n        console.log(\"Update profile\",res)\n        if(res.statusCode==200){\n          this.router.navigate(['dashboard'])\n          this.spinner.hide()\n          this.submitted = false\n         this.service.subject.next(true)\n         \n          Swal.fire('Success',res.message,'success')\n        }else{\n          this.spinner.hide()\n          Swal.fire('Oops',res.message,'error')\n        }\n      },error=>{\n        this.spinner.hide()\n        Swal.fire('Oops','Something went wrong','error')\n      })\n    }else if(this.formForShop.invalid){\n      this.spinner.hide()\n     // Swal.fire('Oops','Please fill all field correctly','error')\n    }\n    \n    }\n}\n","<header class=\"bg-primary text-left p-2\">\n  <div class=\"container\">\n    <a href=\"javascript:void()\"><img src=\"assets/images/logo-icon.svg\" class=\"img-fluid\"><img\n        src=\"assets/images/logo-content.svg\" class=\"img-fluid\"></a>\n  </div>\n</header>\n<div class=\"container mt-3\">\n  <div class=\"card p-3\">\n    <div *ngIf=\"this.role=='franchise'\">\n      <h4 class=\"\">Vendor Franchise Detail</h4>\n <form [formGroup]=\"profileForm\">\n        <div class=\"form-body\">\n          <div class=\"card-body\">\n            <!-- <div class=\"row\">\n                  <div class=\"col-md-12 text-right\">\n                      <button routerLink=\"/pages/vendors\" class=\"btn btn-primary \">Back</button>\n                  </div>\n              </div> -->\n            <!-- end row -->\n            <div class=\"row p-t-20\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">First Name</label>\n                  <input type=\"text\" id=\"firstName\" class=\"form-control\" placeholder=\"John\" formControlName=\"firstName\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandling('firstName', 'required')\">\n                  First name is required!\n              </p>\n              <p class=\"error\"\n                  *ngIf=\" errorHandling('firstName', 'pattern')\">\n                  First name should alphabetic!\n              </p>\n                </div>\n              </div>\n              <!--/span-->\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Last Name</label>\n                  <input type=\"text\" id=\"firstName\" class=\"form-control\" placeholder=\"doe\" formControlName=\"lastName\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandling('lastName', 'required')\">\n                  Last name is required!\n              </p>\n              <p class=\"error\"\n                  *ngIf=\" errorHandling('lastName', 'pattern')\">\n                  Last name should alphabetic!\n              </p>\n                </div>\n              </div>\n              <!--/span-->\n              <div class=\"col-md-6\">\n                <div class=\"form-group has-success\">\n                  <div class=\"form-group\">\n                    <label class=\"control-label\">Upload Vendor Profile</label>\n                    <div class=\"custom-file\"><input class=\"custom-file-input\" id=\"inputGroupFile01\" type=\"file\" (change)=\"uploadFile($event)\" name=\"image\"><label\n                        class=\"custom-file-label text-nowrap text-truncate\" for=\"inputGroupFile01\">{{fileName?fileName:'Choose file'}}</label>\n                      </div>\n                      <p class=\"error\"\n                      *ngIf=\"submitted && errorHandling('image', 'required')\">\n                      Vendor Profile is required!\n                  </p>\n                      </div>\n                </div>\n              </div>\n              <!--/span-->         \n              <!--/span-->\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Restaurant Name</label>\n                  <input type=\"text\" id=\"firstName\" class=\"form-control\" placeholder=\"Restaurant name\" formControlName=\"resturant\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandling('resturant', 'required')\">\n                  Restaurant Name is required!\n              </p>\n                </div>\n              </div>\n            </div>\n            <!--/row-->\n            <div class=\"row \">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Date of birth</label>\n                  <input type=\"date\" id=\"firstName\" class=\"form-control\"  placeholder=\"\" max=\"{{minAge | date:'yyyy-MM-dd'}}\" formControlName=\"dob\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && (profileForm.controls['dob'].value==0)\">\n                  Date of birth is required!\n              </p>\n            \n                </div>\n              </div>\n              \n              <!--/span-->\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Email</label>\n                  <input type=\"email\" id=\"firstName\" class=\"form-control\" placeholder=\"example@gmail.com\" formControlName=\"email\" >\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandling('email', 'required')\">\n                  Email is required!\n              </p>\n              <p class=\"error\"\n                  *ngIf=\" errorHandling('email', 'pattern')\">\n                  Email is not valid!\n              </p>\n                </div>\n              </div>\n              <!-- <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Opening Time</label>\n                  <input formControlName=\"openTime\" type=\"time\" class=\"form-control\" (change)=\"IsSelectedTime($event,'start')\"/>\n                  <mat-error *ngIf=\"submitted && profileForm.controls['openTime'].invalid\"\n                    class=\"error d-inline-block pt-1\">\n                    *Please choose opening time.\n                  </mat-error>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Closing Time</label>\n                  <input formControlName=\"closeTime\" type=\"time\" class=\"form-control\" (change)=\"IsSelectedTime($event,'end')\"/>\n                  <mat-error *ngIf=\"submitted && profileForm.controls['closeTime'].invalid\"\n                    class=\"error d-inline-block pt-1\">\n                    *Please choose closing time.\n                  </mat-error>\n                  <mat-error class=\"error\" *ngIf=\"(startTime>0) && profileForm.get('openTime').value ==  profileForm.get('closeTime').value\">\n                    *Opening time & closing time can't be same.\n                  </mat-error>\n                  <mat-error class=\"error\" *ngIf=\"profileForm.get('openTime').value >  profileForm.get('closeTime').value  && (endTime>0)\">\n                    *Closing time should be greater than opening time.\n                  </mat-error>\n                </div>\n              </div> -->\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Are you currently delivering right now?*</label>\n                  <select name=\"\" id=\"\" class=\"form-control\"  formControlName=\"isDelivery\">\n                    <option value=\"\">Choose option</option>\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select>\n                  <p class=\"error\"\n                                      *ngIf=\"submitted && errorHandling('isDelivery', 'required')\">\n                                      This field is required!\n                                  </p>\n                </div>\n              </div>        \n              <!--/span-->\n              <div class=\"col-md-6\">\n                <div class=\"form-group has-danger\">\n                  <label class=\"control-label\">Zip</label>\n                  <input type=\"text\" id=\"zip\" class=\"form-control form-control-danger\" formControlName=\"zip\" placeholder=\"eg:44343\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandling('zip', 'required')\">\n                  Zip code is required!\n              </p>\n              <p class=\"error\"\n                  *ngIf=\" errorHandling('zip', 'pattern')\">\n                  Zip code should numeric!\n              </p>\n              <p class=\"error\"\n                  *ngIf=\" errorHandling('zip', 'minlength')\">\n                  Minlength of zip code should 4!\n              </p>\n              <p class=\"error\"\n                  *ngIf=\" errorHandling('zip', 'maxlength')\">\n                  Maxlength of zip code should 7!\n              </p>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group has-danger\">\n                  <label class=\"control-label\">\n                    Type of restaurant</label>\n                  <input type=\"text\" id=\"zip\" class=\"form-control form-control-danger\" formControlName=\"resturantType\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandling('resturantType', 'required')\">\n                  Type of restaurant is required!\n              </p>\n                </div>\n              </div>\n              <!--/span-->           \n              <div class=\"col-md-6\">\n                <div class=\"form-group has-danger\">\n                  <label class=\"control-label\">City</label>\n                  <input type=\"text\" id=\"city\" formControlName=\"city\" class=\"form-control form-control-danger\" placeholder=\"Berlin\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandling('city', 'required')\">\n                  City is required!\n              </p>\n                </div>\n              </div>           \n              <div class=\"col-md-12\">\n                <div class=\"form-group has-danger\">\n                  <label class=\"control-label\">Address</label>\n                  <textarea name=\"\" id=\"\" cols=\"30\" rows=\"5\" class=\"form-control\" #ref ngx-google-places-autocomplete #placesRef=\"ngx-places\"\n                                      (onAddressChange)=\"AddressChange($event,ref.value)\" formControlName=\"address\"\n                                        placeholder=\"#433 New garden Complex\"></textarea>\n                                        <p class=\"error\"\n                                        *ngIf=\"submitted && errorHandling('address', 'required')\">\n                                        Address is required!\n                                    </p>\n                </div>\n              </div>\n              <!--/span-->\n            </div>\n            <!--/row-->\n            <button class=\"btn-primary btn\" (click)=\"updateFranchaise()\">Submit</button>\n          </div>\n        </div>\n      </form>\n    </div>\n    <div *ngIf=\"this.role=='shop'\">\n      <h4 class=\"\">Vendor Shop Detail</h4>\n      <form [formGroup]=\"formForShop\">\n        <div class=\"form-body\">\n          <div class=\"card-body\">\n            <!-- <div class=\"row\">\n                  <div class=\"col-md-12 text-right\">\n                      <button routerLink=\"/pages/vendors\" class=\"btn btn-primary \">Back</button>\n                  </div>\n              </div> -->\n            <!-- end row -->\n            <div class=\"row p-t-20\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">First Name</label>\n                  <input type=\"text\" id=\"firstName\" class=\"form-control\" placeholder=\"John\" formControlName=\"firstName\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandlingphone('firstName', 'required')\">\n                  First name is required!\n              </p>\n          \n          <p class=\"error\"\n              *ngIf=\"errorHandlingphone('firstName', 'pattern')\">\n              First name should alphabetic!\n  </p>\n                </div>\n              </div>\n              <!--/span-->      \n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Last Name</label>\n                  <input type=\"text\" id=\"lasttName\" class=\"form-control\" placeholder=\"doe\" formControlName=\"lastName\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandlingphone('lastName', 'required')\">\n                  Last name is required!\n              </p>\n          \n          <p class=\"error\"\n              *ngIf=\"errorHandlingphone('lastName', 'pattern')\">\n              Last name should alphabetic!\n  </p>\n                </div>\n              </div>\n              <!--/span-->                \n              <!--/span-->\n              <div class=\"col-md-12\">\n                <div>\n                  <label class=\"control-label\">Phone Number</label>\n                  <div class=\"input-group\">\n                    <div class=\"input-group-prepend\">\n                      <select class=\"form-control form-control-lg\" (change)=\"someMethod($event.target.value)\" formControlName=\"dialCode\" >\n                        <option *ngFor=\"let code of countrycode\" [value]=\"code.dial_code\"> {{code.dial_code}}</option>\n                          </select>\n                    </div>\n                    <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Phone no.\"  \n                    aria-label=\"Username\" aria-describedby=\"basic-addon1\" formControlName=\"phone\" >\n                  \n                </div>\n                <p class=\"error\"\n                *ngIf=\"submitted && errorHandlingphone('phone', 'required')\">\n                Phone number is required!\n            </p>\n            <p class=\"error\"\n                *ngIf=\"errorHandlingphone('phone', 'maxlength')\">\n                Maximum length should 15!\n        </p>\n            <p class=\"error\"\n            *ngIf=\"errorHandlingphone('phone', 'minlength')\">\n            Minimum length should 7!\n    </p>\n        <p class=\"error\"\n            *ngIf=\"errorHandlingphone('phone', 'pattern')\">\n            Please enter valid phone no!\n</p>\n  \n                </div>\n              </div>\n            </div>\n            <!--/row-->\n            <div class=\"row \">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Email</label>\n                  <input type=\"email\"  id=\"firstName\" class=\"form-control\" placeholder=\"example@gmail.com\" formControlName=\"email\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandlingphone('email', 'required')\">\n                  Email is required!\n              </p>\n          \n          <p class=\"error\"\n              *ngIf=\"errorHandlingphone('email', 'pattern')\">\n              Email is not valid!\n  </p>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Date of birth</label>\n                  <input type=\"date\" id=\"firstName\" class=\"form-control\" max=\"{{minAge | date:'yyyy-MM-dd'}}\" placeholder=\"\" formControlName=\"dob\">\n                  <p class=\"error\"\n                  *ngIf=\"submitted && (formForShop.controls['dob'].value==0)\">\n                  Date of birth is required!\n              </p>\n      \n                </div>\n              </div>\n              <!-- <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Opening Time</label>\n                  <input formControlName=\"openTime\" type=\"time\" class=\"form-control\" (change)=\"IsSelectedTime($event,'start')\"/>\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandlingphone('openTime', 'required')\">\n                  Opening time is required!\n              </p>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label>Closing Time</label>\n                  <input formControlName=\"closeTime\" type=\"time\" class=\"form-control\" (change)=\"IsSelectedTime($event,'end')\"/>\n                  <p class=\"error\"\n                  *ngIf=\"submitted && errorHandlingphone('closeTime', 'required')\">\n                  Closing time is required!\n              </p>\n                  <mat-error class=\"error\" *ngIf=\"(startTime>0) && formForShop.get('openTime').value ==  formForShop.get('closeTime').value\">\n                    *Opening time & closing time can't be same.\n                  </mat-error>\n                  <mat-error class=\"error\" *ngIf=\"formForShop.get('openTime').value >  formForShop.get('closeTime').value  && (endTime>0)\">\n                    *Closing time should be greater than opening time.\n                  </mat-error>\n                </div>\n              </div> -->\n              <div class=\"col-md-12\">\n                <div class=\"form-group has-success\">\n                  <div class=\"form-group\">\n                    <label class=\"control-label\">Upload Vendor Profile</label>\n                    <div class=\"custom-file\"><input class=\"custom-file-input\" id=\"inputGroupFile01\" type=\"file\" (change)=\"uploadFile($event)\" name=\"image\"><label\n                        class=\"custom-file-label text-nowrap text-truncate\" for=\"inputGroupFile01\">{{fileName?fileName:'Choose file'}}</label>\n                      </div>\n                      <p class=\"error\"\n                      *ngIf=\"submitted && errorHandling('image', 'required')\">\n                      Vendor Profile is required!\n                  </p>\n                      </div>\n                </div>\n              </div>\n              <!--/span-->\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <label class=\"control-label\">Where would you like to start a franchise?*</label>\n                  <textarea name=\"\" id=\"\" cols=\"20\" rows=\"5\" placeholder=\"eg: city\"  class=\"form-control\" formControlName=\"location\"></textarea>\n                </div>\n                <p class=\"error\"\n                *ngIf=\"submitted && errorHandlingphone('location', 'required')\">\n                This filed is required!\n            </p>\n            <p class=\"error\"\n                *ngIf=\"errorHandlingphone('location', 'pattern')\">\n                White space not allowed!\n            </p>\n              </div>        \n              <!--/span-->\n            \n              <div class=\"col-md-12\">\n                <div class=\"form-group has-danger\">\n                  <label class=\"control-label\">Address</label>\n                  <textarea name=\"\" id=\"\" cols=\"30\" rows=\"3\" class=\"form-control\"  #ref ngx-google-places-autocomplete #placesRef=\"ngx-places\"\n                  (onAddressChange)=\"AddressChange($event,ref.value)\"\n                    placeholder=\"#433 New garden Complex\" formControlName=\"address\"></textarea>\n                    <p class=\"error\"\n                    *ngIf=\"submitted && errorHandlingphone('address', 'required')\">\n                    Address is required!\n                </p>\n                \n                  </div>\n              </div>\n              <!--/span-->\n            </div>\n            <!--/row-->\n          </div>\n        </div>\n        <button class=\"btn-primary btn\" (click)=\"updateProfile()\">Submit</button>\n      </form>\n    </div>\n    \n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport Swal from 'sweetalert2';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-changepassword',\n  templateUrl: './changepassword.component.html'\n})\nexport class changepasswordComponent implements OnInit{\n  form: FormGroup;\n  history = window.history;\n  isSubmitted: Boolean = false\n  constructor(\n    private fb: FormBuilder,\n    private toaster: ToastrService,\n    private router: Router,\n    private authService: SharedService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      oldPassword: ['', Validators.required],\n      newPassword: ['', Validators.required],\n      confirmNewPassword: ['', Validators.required]\n     })\n  }\n  public errorHandlingSignup = (control: string, error: string) => {\n    return this.form.controls[control].hasError(error);\n  }\n  save() {\n    this.isSubmitted = true\n    if (this.form.valid){\n      this.spinner.show()\n    let data = {\n      oldPassword: this.form.value.oldPassword,\n      newPassword: this.form.value.newPassword,\n     // confirmPassword: this.form.value.newPassword,\n    }\n    this.isSubmitted = false\n    this.authService.changePassword(data).subscribe((response:any) => {\n      this.spinner.hide()\n      if (response.statusCode==200) {\n        Swal.fire('Success',response.message,'success')\n        this.router.navigate(['dashboard'])\n      } else {\n        Swal.fire('Oops',response.message,'error')\n      }\n    }, error => {\n      \n      this.spinner.hide()\n      console.log(error)\n      Swal.fire('Oops',error.message,'error')\n    })\n    } else if(this.form.invalid){\n     // Swal.fire('Oops','Please fill all field','error')\n    }\n    \n  }\n  \n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/logo.svg\"></span>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" [formGroup]=\"form\">\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Old Password\" formControlName=\"oldPassword\">\n                                <p class=\"text-white\"\n                                *ngIf=\"isSubmitted && errorHandlingSignup('oldPassword', 'required')\">Old password is required!</p>\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"New Password\" formControlName=\"newPassword\">\n                                <p class=\"text-white\"\n                                *ngIf=\"isSubmitted && errorHandlingSignup('newPassword', 'required')\">New password is required!</p>\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12\">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Retype Password\" formControlName=\"confirmNewPassword\">\n                                <p class=\"text-white\"\n                                *ngIf=\"isSubmitted && errorHandlingSignup('confirmNewPassword', 'required')\">\n                                Confirm password is required!\n                                    </p>\n                            <p class=\"text-white\"\n                                *ngIf=\"(form.get('confirmNewPassword').value.length>0) && form.get('newPassword').value !=  form.get('confirmNewPassword').value\">\n                                Password mismatched!\n                                </p>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"history.back()\">Cancel</button>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"save()\">Submit</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  constructor() { }\n\n  loginform = true;\n  recoverform = false;\n\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\">\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n                        </div>\n                        <div class=\"input-group mb-3\">\n                            <div class=\"input-group-prepend\">\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                            </div>\n                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\">\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12\">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center\">\n                            <div class=\"col-xs-12 p-b-20\">\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\">Log In</button>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                <div class=\"social\">\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab fa-facebook\"></i> </a>\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab fa-google-plus\"></i> </a>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group m-b-0 m-t-10\">\n                            <div class=\"col-sm-12 text-center\">\n                                Don't have an account? <a href=\"#/authentication/signup\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\">\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Username\">\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-danger\" type=\"submit\" name=\"action\">Reset</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgbModal, ModalDismissReasons, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\nimport { SharedService } from '../shared.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login2.component.html',\n  styleUrls: ['./login2.scss']\n\n})\nexport class Login2Component implements OnInit{\n  countryCode: any;\n  formSubmitted:boolean = false\n  constructor(private spinner:NgxSpinnerService, private modalService: NgbModal,private service:SharedService,private fb:FormBuilder,private router:Router){\n    this.service.getJson().subscribe((res:any)=>\n    {\n      this.countrycode = res.countryArray\n      this.code = res.countryArray[0].dial_code\n    })\n  }\n  countrycode: any;\n  code: any;\n  otpvalue: number;\n  history = window.history;\n  CountryCode:any\n  IsphoneRecover:boolean = false\n  isSubmitted:boolean = false\n  recoveryForm:FormGroup\n  isphoneLogin:boolean = false\n  submitted:boolean = false\n  loginwithEmail:FormGroup\n  loginform = true;\n  loginform1 = false;\n  recoverform = false;\n  phonecode = false;\n  otp= false;\n  form: FormGroup;\n  phoneRecover:FormGroup\n  loginWithPhone:FormGroup\n  showRecoverForm() {\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n  otpFrom() {\n    this.phoneRecover.reset()\n    this.loginform1 = !this.loginform1;\n    this.loginform = !this.loginform;\n    this.otp = !this.otp;\n  }\n  CancelForgot(){\n    this.loginform = !this.loginform;\n    this.recoverform = !this.recoverform;\n  }\n  openModal(content) {\n    this.modalService.open(content,{backdropClass: 'light-blue-backdrop',centered: true,size: 'sm'})\n  }\n  openWindowCustomClass(content3) {\n    this.modalService.open(content3, {backdropClass: 'light-blue-backdrop',centered: true,size: 'sm'});\n  }\n  fetchNews(e){\n    this.loginWithPhone.get('code').setValue(this.CountryCode?this.CountryCode:this.code)\n    console.log(\"Clicked Tab\",e);\n    \n  }\n  clicked(){\n    console.log(\"hele\");\n    this.loginform = true;\n    this.phonecode = true;\n  }\n  ngOnInit(){\n    this.form = this.fb.group({\n      newPassword: ['', Validators.required],\n      confirmNewPassword: ['', Validators.required]\n     })\n    this.phoneRecover = this.fb.group({\n\n      phone:['',Validators.compose([Validators.required,Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')\n         ,Validators.maxLength(15),Validators.minLength(7)])],\n  })\n    \n    this.recoveryForm = this.fb.group({\n      email:['',[Validators.required,Validators.email,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n    })\n    this.loginwithEmail = this.fb.group({\n      email:['',[Validators.required,Validators.email,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n    password:['',Validators.required],\n    remember:['']\n    })\n    this.loginWithPhone = this.fb.group({\n      phone:['',Validators.compose([Validators.required,Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')\n         ,Validators.maxLength(15),Validators.minLength(7)])],\n         password:['',Validators.required],\n         code:[this.code],\n    remember:['']\n    })\n   // this.loginWithPhone.get('code').setValue(this.code)\n    if(localStorage.getItem('rememberForEmail')) {\n    let formData = JSON.parse(localStorage.getItem('rememberForEmail'))\n    \n      this.loginwithEmail.patchValue({\n        email: formData.email,\n        password: formData.password,\n        remember: formData.remember\n      })\n    }\n   // debugger\n    if(localStorage.getItem('rememberForPhone')) {\n      let formData = JSON.parse(localStorage.getItem('rememberForPhone'))\n      this.CountryCode = formData.code\n      this.loginWithPhone.get('code').setValue(formData.code?formData.code:this.code)\n        this.loginWithPhone.patchValue({\n          phone: formData.phone,\n          password: formData.password,\n          remember: formData.remember\n        })\n      }\n      \n  }\n  CloseModal(){\n    this.history.back()\n    this.loginform1 = !this.loginform1;\n    this.loginform = !this.loginform;\n    this.otp = !this.otp;\n    this.modalService.dismissAll()\n  }\n  \n  ClosePhone(){\n    this.otpFrom()\n  }\n  public errorHandlingSignup = (control: string, error: string) => {\n    return this.loginwithEmail.controls[control].hasError(error);\n  }\n  public errorHandlingphone = (control: string, error: string) => {\n    return this.loginWithPhone.controls[control].hasError(error);\n  }\n  public errorPhoneRecoverForm = (control: string, error: string) => {\n    return this.phoneRecover.controls[control].hasError(error);\n  }\n  public errorHandling = (control: string, error: string) => {\n    return this.form.controls[control].hasError(error);\n  }\n  login() {\n  \n    let url = `admin/login`\n    this.submitted = true\n   if(this.loginwithEmail.valid){\n      this.spinner.show()\n      this.submitted = false\n      let data = {\n        email: this.loginwithEmail.value.email,\n        password: this.loginwithEmail.value.password,\n      }\n      this.service.signIn(data).subscribe((response:any) =>{\n        console.log('This is login response',response.data.user)\n        if(response.statusCode==200) {\n          this.submitted = false\n          this.router.navigate(['dashboard']);\n          localStorage.setItem('eSupply', JSON.stringify(response.data.user))\n          localStorage.setItem('token',response.data.user.accessToken)\n          if(this.loginwithEmail.value.remember) {\n            localStorage.setItem('rememberForEmail', JSON.stringify(this.loginwithEmail.value))\n          } else \n          {\n            localStorage.removeItem('rememberForEmail')\n          }\n        \n        }else {\n          Swal.fire('Oops',response.message,'error')\n        }\n        this.spinner.hide()\n      }, error => {\n        this.spinner.hide()\n        Swal.fire('Oops',error.message,'error')\n        \n        console.log(error)\n      })\n   }else if(this.loginwithEmail.invalid){\n    this.spinner.hide()\n    setTimeout(() => {\n      this.submitted = false\n    }, 4000);\n      Swal.fire('Oops','Please enter the required fields','error')\n      \n    }\n    \n  }\n  phoneLogin(){\n    \n    this.isphoneLogin = true\n   if(this.loginWithPhone.valid){\n      this.spinner.show()\n      this.isphoneLogin = false\n      let data = {\n        phoneNo: this.loginWithPhone.value.phone,\n        password: this.loginWithPhone.value.password,\n        // dialCode:this.countryCode == null ? this.code : this.countryCode\n        dialCode:this.loginWithPhone.value.code\n      }\n      this.service.signIn(data).subscribe((response:any) =>{\n        console.log('This is login response',response.data.user)\n        if(response.statusCode==200) {\n          this.isphoneLogin = false\n          this.router.navigate(['dashboard']);\n          localStorage.setItem('eSupply', JSON.stringify(response.data.user))\n          localStorage.setItem('token',response.data.user.accessToken)\n          if(this.loginWithPhone.value.remember) {\n           \n            localStorage.setItem('rememberForPhone', JSON.stringify(this.loginWithPhone.value))\n          } else \n          {\n            localStorage.removeItem('rememberForPhone')\n          }\n        \n        }else {\n          Swal.fire('Oops',response.message,'error')\n        }\n        this.spinner.hide()\n      }, error => {\n        this.spinner.hide()\n        Swal.fire('Oops',error.message,'error')\n        \n        console.log(error)\n      })\n   }else if(this.loginWithPhone.invalid){\n    this.spinner.hide()\n    setTimeout(() => {\n      this.isphoneLogin = false\n    }, 4000);\n      Swal.fire('Oops','Please enter the required fields','error')\n      \n    }\n}\nrecover() {\n\n  this.isSubmitted = true\n  this.spinner.show()\n  let data = this.recoveryForm.value\n  \n  this.service.forgot(data).subscribe((response:any) => {\n    console.log('Reset',response)\n    this.spinner.hide()\n    if(response.statusCode==200) {\n      this.isSubmitted = false\n      Swal.fire('Success',`Link has been sent to ${this.recoveryForm.value.email}`,'success')\n      this.loginform = !this.loginform;\n      this.recoverform = !this.recoverform;\n    } else {\n      this.recoveryForm.reset()\n      Swal.fire('Oops',response['message'],'error')\n    }\n  }, error => {\n    this.spinner.hide()\n    Swal.fire('Oops',error['message'],'error')\n    console.log(error)\n  })\n}\nsomeMethod(value)\n  {\n    \n    this.countryCode = value;\n  }\n  \nrecoverForPhone(content3) {\n\n  this.IsphoneRecover = true\n  this.spinner.show()\n  let data = {\n    \"phoneNo\":this.phoneRecover.value.phone,\n    \"dialCode\":this.countryCode == null ? this.code : this.countryCode\n    }\n  \n  this.service.forgotPhone(data).subscribe((response:any) => {\n    console.log('Reset',response)\n    this.spinner.hide()\n    \n    if(response.statusCode==200) {\n      this.openWindowCustomClass(content3)\n      this.IsphoneRecover = false\n      Swal.fire('Success',response.message,'success')\n     \n      // this.loginform = !this.loginform;\n      // this.recoverform = !this.recoverform;\n    } else {\n     // this.phoneRecover.reset()\n      Swal.fire('Oops',response['message'],'error')\n    }\n  }, error => {\n    this.spinner.hide()\n    Swal.fire('Oops',error['message'],'error')\n    console.log(error)\n  })\n}\n// showRecoverForm() {\n//   this.showPasswordRecoveryForm = !this.showPasswordRecoveryForm\n// }\ngotoVerify(content)\n{\nconsole.log('This is otp',this.otpvalue)\n const data = {\n  \"phoneNo\":this.phoneRecover.value.phone,\n  \"dialCode\":this.countryCode == null ? this.code : this.countryCode,\n    \"secretCode\": this.otpvalue\n}\n  this.service.verifyPhone(data).subscribe((res:any)=>\n    {\n      if(res.statusCode == 200)\n      {\n        this.modalService.dismissAll()\n        sessionStorage.setItem('token',res.data.accessToken)\n    Swal.fire('Success',res.message,'success')\n     this.openModal(content)\n      }\n      else{\n        this.submitted = true;\n        \n       Swal.fire('Oops',res.message,'error')\n      }\n    })\n}\nonOtpChange(event)\n  {\n    this.otpvalue = event\n    console.log(this.otpvalue);\n    \n  }\n  sendOtp(){\n    let obj = {\n      \"phoneNo\":this.phoneRecover.value.phone,\n      \"dialCode\":this.countryCode == null ? this.code : this.countryCode\n    }\n    this.service.sentOtp(obj).subscribe((res:any)=>{\n      console.log(res,\"OTP SENT\");\n      if(res.statusCode == 200){\n        Swal.fire('Otp',res.message,'success')\n      }else{\n        Swal.fire('Oops',res.message,'error')\n      }\n    },err=>{\n      Swal.fire('Oops',err.message,'error')\n    })\n  }\n\n  save() {\n    let url = `admin/resetPassword`\n    this.formSubmitted = true\n    if (this.form.valid){\n      this.spinner.show()\n    let data ={\n      \"accessToken\": sessionStorage.getItem('token'),\n      \"newPassword\":this.form.value.newPassword\n  }\n    this.formSubmitted = false\n    this.service.ResetPassword(url,data).subscribe((response:any) => {\n      this.spinner.hide()\n      if (response.statusCode==200) {\n        Swal.fire('Success',response.message,'success')\n    this.modalService.dismissAll()\n    this.loginform1 = !this.loginform1;\n    this.loginform = !this.loginform;\n    this.otp = !this.otp;\n      } else {\n        Swal.fire('Oops',response.message,'error')\n      }\n    }, error => {\n      \n      this.spinner.hide()\n      console.log(error)\n      Swal.fire('Oops',error.message,'error')\n    })\n    } else if(this.form.invalid){\n     // Swal.fire('Oops','Please fill all field','error')\n    }\n    \n  }\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\n    <div class=\"auth-box on-sidebar\">\n        <div *ngIf=\"loginform\" id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\"  /></span>\n                <h5 class=\"font-medium m-b-20 pt-2\">Login for the vendor dashboard</h5>\n            </div>\n            <!-- Form -->\n            <ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs custom-tab\">\n                <li ngbNavItem>\n                  <a ngbNavLink class=\"text-white\">Login with email</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" id=\"loginform\" [formGroup]=\"loginwithEmail\">\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\n                                    </div>\n                                    <input type=\"text\" formControlName=\"email\" class=\"form-control form-control-lg\" placeholder=\"Email\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\n                                    \n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                                    </div>\n                                    <input type=\"password\" formControlName=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\n                                </div>\n                                \n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" formControlName=\"remember\" class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                            <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group text-center\">\n                                    <div class=\"col-xs-12 p-b-20\">\n                                        <button  class=\"btn btn-block btn-lg btn-theme\" type=\"submit\" (click)=\"login()\">Log In</button>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"row\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                        <div class=\"social\">\n                                            <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\n                                            <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <!-- <div class=\"form-group m-b-0 m-t-10\">\n                                    <div class=\"col-sm-12 text-center\">\n                                        Don't have an account? <a href=\"#/authentication/signup2\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\n                                    </div>\n                                </div> -->\n                            </form>\n                        </div>\n                    </div>  \n\n                  </ng-template>\n                </li>\n                <li ngbNavItem [ngClass]=\"{'active':phonecode}\">\n                  <a ngbNavLink class=\"text-white\" (click)=\"fetchNews($event)\">Login with phone no.</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" id=\"loginform1\" [formGroup]=\"loginWithPhone\">\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                      <select class=\"form-control form-control-lg\"  formControlName=\"code\">\n                                        <option *ngFor=\"let code of countrycode\" [value]=\"code.dial_code\"> {{code.dial_code}}</option>\n                                          </select>\n                                    </div>\n                                    <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Phone no.\" formControlName=\"phone\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\n                                </div>\n                                <div class=\"input-group mb-3\">\n                                    <div class=\"input-group-prepend\">\n                                        <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\n                                    </div>\n                                    <input type=\"password\" class=\"form-control form-control-lg\" placeholder=\"Password\" formControlName=\"password\"aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-md-12\">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" formControlName=\"remember\"class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label text-white\" for=\"customCheck1\">Remember me</label>\n                                            <a (click)=\"otpFrom()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-white float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"form-group text-center\">\n                                    <div class=\"col-xs-12 p-b-20\">\n                                        <button  class=\"btn btn-block btn-lg btn-theme\" type=\"submit\" (click)=\"phoneLogin()\">Log In</button>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"row\">\n                                    <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\n                                        <div class=\"social\">\n                                            <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\n                                            <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\n                                        </div>\n                                    </div>\n                                </div> -->\n                               \n                            </form>\n                        </div>\n                    </div>\n                  </ng-template>\n                </li>\n              </ul>\n              <div [ngbNavOutlet]=\"nav\"></div>\n              <div class=\"form-group m-b-0 m-t-10\">\n                <div class=\"col-sm-12 text-center text-white\">\n                    Don't have an account? <a routerLink=\"/signup2\" class=\"text-white m-l-5\"><b>Sign Up</b></a>\n                </div>\n            </div>\n            <div class=\"\">\n                <p class=\"text-danger err_box\"\n                *ngIf=\"submitted && errorHandlingSignup('email', 'required')\">\n                Email is required!\n            </p>\n                <p class=\"text-danger\"\n                *ngIf=\"errorHandlingSignup('email', 'pattern')\">\n                Email is invalid!\n            </p>\n                <p class=\"text-danger\"\n                *ngIf=\"submitted && errorHandlingSignup('password', 'required')\">\n                Password is required!\n            </p>\n            <p class=\"text-danger\"\n            *ngIf=\"isphoneLogin && errorHandlingphone('phone', 'required')\">\n            Phone number is required!\n        </p>\n            <p class=\"text-danger\"\n            *ngIf=\"errorHandlingphone('phone', 'pattern')\">\n            Phone number is invalid!\n        </p>\n        <p class=\"text-danger\"\n            *ngIf=\"errorHandlingphone('phone', 'maxlength')\">\n            Maximum length of phone number should be 15!\n        </p>\n        <p class=\"text-danger\"\n            *ngIf=\"errorHandlingphone('phone', 'minlength')\">\n            Minimum length of phone number should be 7!\n        </p>\n            <p class=\"text-danger\"\n            *ngIf=\"isphoneLogin && errorHandlingphone('password', 'required')\">\n            Password is required!\n        </p>\n            </div>\n            \n        </div>\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your Email and instructions will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\" [formGroup]=\"recoveryForm\">\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Email\" formControlName=\"email\">\n                            <p class=\"text-white\" *ngIf=\"isSubmitted && recoveryForm.controls['email'].errors?.required\">This field is required</p>\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-theme \" type=\"button\" name=\"action\" (click)=\"CancelForgot()\">Cancel</button>\n                        </div>\n                    </div>\n                    <div class=\"row m-t-20\">\n        \n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" name=\"action\" (click)=\"recover()\">Reset</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n           <div *ngIf=\"loginform1\" id=\"otp\" [ngClass]=\"{'d-block': otp}\">\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\n                <span>Enter your phone number and OTP will be sent to you!</span>\n            </div>\n            <div class=\"row m-t-20\">\n                <!-- Form -->\n                <form class=\"col-12\" [formGroup]=\"phoneRecover\" >\n                    <!-- email -->\n                    <div class=\"form-group row\">\n                        <div class=\"col-12\">\n                            <div class=\"input-group mb-3\">\n                                <div class=\"input-group-prepend\">\n                                  <select class=\"form-control form-control-lg\" (change)=\"someMethod($event.target.value)\">\n                                    <option *ngFor=\"let code of countrycode;\" [value]=\"code.dial_code\"> {{code.dial_code}}</option>\n                                      </select>\n                                </div>\n                                <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Phone no.\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required formControlName=\"phone\">\n                                \n                            </div>\n                            <p class=\"text-white\"\n                                *ngIf=\"IsphoneRecover && errorPhoneRecoverForm('phone', 'required')\">\n                                Phone number is required!\n                            </p>\n                                <p class=\"text-white\"\n                                *ngIf=\"errorPhoneRecoverForm('phone', 'pattern')\">\n                                Phone number is invalid!\n                            </p>\n                            <p class=\"text-white\"\n                                *ngIf=\"errorPhoneRecoverForm('phone', 'maxlength')\">\n                                Maximum length of phone number should be 15!\n                            </p>\n                            <p class=\"text-white\"\n                                *ngIf=\"errorPhoneRecoverForm('phone', 'minlength')\">\n                                Minimum length of phone number should be 7!\n                            </p>\n                        </div>\n                    </div>\n                    <!-- pwd -->\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-theme\" type=\"submit\" name=\"action\" (click)=\"ClosePhone()\">Cancel</button>\n                        </div>\n                    </div>\n                    <div class=\"row m-t-20\">\n                        <div class=\"col-12\">\n                            <button class=\"btn btn-block btn-lg btn-theme\" type=\"submit\" name=\"action\" (click)=\"recoverForPhone(content3)\">Send</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #content3 let-modal>\n   \n    <div class=\"modal-body\"> \n        <button class=\"close-icon\" (click)=\"modal.dismiss()\"><i class=\"mdi mdi-close\"></i></button>\n        <h3>OTP</h3>\n        <ng-otp-input  class=\"otp-box\" (onInputChange)=\"onOtpChange($event)\"  [config]=\"{length:4}\"></ng-otp-input>\n        <div class=\"d-flex mt-3 align-items-center\">\n            <button class=\"btn btn-primary\"  (click)=\"gotoVerify(content)\">Submit</button>\n            <a href=\"javascript:void()\" class=\"ml-auto\" (click)=\"sendOtp()\">Resend</a>\n        </div>\n    </div>\n  \n  </ng-template> \n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Reset password</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n        <form class=\"form-horizontal\" [formGroup]=\"form\">\n            <div class=\"form-group row\">\n                <div class=\"col-12\">\n                    <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"New Password\" formControlName=\"newPassword\">\n                    <p class=\"text-danger\"\n                    *ngIf=\"formSubmitted && errorHandling('newPassword', 'required')\">New password is required!</p>\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <div class=\"col-12\">\n                    <input class=\"form-control form-control-lg\" type=\"password\" required=\"\" placeholder=\"Retype Password\" formControlName=\"confirmNewPassword\">\n                    <p class=\"text-danger\"\n                    *ngIf=\"formSubmitted && errorHandling('confirmNewPassword', 'required')\">\n                    Confirm password is required!\n                        </p>\n                <p class=\"text-danger\"\n                    *ngIf=\"(form.get('confirmNewPassword').value.length>0) && form.get('newPassword').value !=  form.get('confirmNewPassword').value\">\n                    Password mismatched!\n                    </p>\n                </div>\n            </div>\n            <div class=\"form-group text-center\">\n                <div class=\"col-xs-12 p-b-20\">\n                    <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"CloseModal()\">Cancel</button>\n                </div>\n            </div>\n            <div class=\"form-group text-center\">\n                <div class=\"col-xs-12 p-b-20\">\n                    <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"save()\">Submit</button>\n                </div>\n            </div>\n        </form>\n    </div>\n  </ng-template>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html'\n})\nexport class SignupComponent {\n  constructor() {}\n\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\n    <div class=\"auth-box\">\n        <div>\n            <div class=\"logo\">\n                <!-- <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span> -->\n                <h5 class=\"font-medium m-b-20\">Sign Up to Vendor</h5>\n            </div>\n            <!-- Form -->\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\n                        <div class=\"form-group row \">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-12 \">\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\n                            </div>\n                        </div>\n                        <div class=\"form-group row\">\n                            <div class=\"col-md-12 \">\n                                <div class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group text-center \">\n                            <div class=\"col-xs-12 p-b-20 \">\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\n                            </div>\n                        </div>\n                        <div class=\"form-group m-b-0 m-t-10 \">\n                            <div class=\"col-sm-12 text-center \">\n                                Already have an account? <a href=\"#/authentication/login \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport Swal from 'sweetalert2';\n//import {SharedService} from ''\nimport { SharedService } from '../shared.service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup2.component.html',\n  styleUrls: ['./signup2.scss']\n})\nexport class Signup2Component implements OnInit{\n  countrycode: any;\n  phonecode: any;\n  url:any;\n  role:any = 'shop'\n  submitted:boolean = false\n  signUpWithEmail:FormGroup\n  countryCode: any;\n  signUpWithPhone:FormGroup \n  constructor(private service:SharedService,private fb:FormBuilder,private router:Router,private spinner:NgxSpinnerService) {\n    this.service.getJson().subscribe((res:any)=>\n      {\n        this.countrycode = res.countryArray\n        this.phonecode = res.countryArray[0].dial_code\n      })\n  }\n  ngOnInit(){\n    this.signUpWithEmail = this.fb.group({\n      email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n         password:['',[Validators.required,Validators.minLength(8)]],\n         firstName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n         lastName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n         confirmPassword:['',Validators.required],\n         \n         role:[''],\n    })\n    this.signUpWithPhone = this.fb.group({\n      phone:['',Validators.compose([Validators.required,Validators.pattern('^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$')\n        ,Validators.maxLength(15),Validators.minLength(7)])],\n        password:['',[Validators.required,Validators.minLength(8)]],\n        email:['',[Validators.required,Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,3}))$/)]],\n        firstName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        lastName:['',[Validators.required,Validators.pattern(/^[a-zA-Z ]*$/i)]],\n        \n         role:[''],\n        confirmPassword:['',Validators.required]\n    })\n  }\n  public errorHandlingSignup = (control: string, error: string) => {\n    return this.signUpWithEmail.controls[control].hasError(error);\n  }\n  public errorHandlingphone = (control: string, error: string) => {\n    return this.signUpWithPhone.controls[control].hasError(error);\n  }\n  someMethod(value)\n  {\n    console.log('Value of code',value,'PhoneCode val',this.phonecode);\n    this.countryCode = value;\n  }\n  changeRole(e) {\nif(e.target.value=='shop'){\nthis.role='shop'\n}else if(e.target.value=='franchise'){\n  this.role = 'franchise'\n}\n}\n  signUpEmail(){\n    if(this.role ==  'shop'){\nthis.url = `admin/register/shop` \n }else if(this.role == 'franchise'){\n   this.url = `admin/register/franchise`\n }\n    this.submitted = true;\n    const data =\n    {\n      \"firstName\":this.signUpWithEmail.controls['firstName'].value,\n      \"lastName\":this.signUpWithEmail.controls['lastName'].value,\n      \"email\":this.signUpWithEmail.controls['email'].value,\n     \"password\":this.signUpWithEmail.controls['password'].value,\n      \"confirmPassword\":this.signUpWithEmail.controls['password'].value,\n     // \"dialCode\":this.countryCode == null ? this.phonecode : this.countryCode\n    }\n    if(!this.signUpWithEmail.invalid && this.signUpWithEmail.controls['password'].value==this.signUpWithEmail.controls['confirmPassword'].value)\n    {\n      this.spinner.show()\n      this.service.signUp(this.url,data).subscribe((res:any)=>\n      {\n        console.log('Res of signup',res);\n        \n        if(res.statusCode == 200)\n        {\n          localStorage.setItem('token',res.data.accessToken)\n          localStorage.setItem('signupData',JSON.stringify(data))\n        \n          Swal.fire('Success','Registered successfully','success')\n          sessionStorage.setItem('token',res.data.accessToken)\n          this.router.navigate([`vendor_detail/${this.role}`])\n          this.submitted = false\n          this.spinner.hide()\n        }\n        else{\n          this.spinner.hide()\n        Swal.fire('Oops',res.message,'error') \n        \n        }\n      })\n    }else if(this.signUpWithEmail.invalid){\n      this.spinner.hide()\n//Swal.fire('Oops','Please fill all field correctly','error')\n\n    }\n  }\n  phoneSignUp(){\n    if(this.role ==  'shop'){\n      this.url = `admin/register/shop` \n       }else if(this.role == 'franchise'){\n         this.url = `admin/register/franchise`\n       }\n\n    //let url = `admin/register/shop`\n    this.submitted = true;\n    const data =\n    {\n      \"firstName\":this.signUpWithPhone.controls['firstName'].value,\n      \"lastName\":this.signUpWithPhone.controls['lastName'].value,\n      \"email\":this.signUpWithPhone.controls['email'].value,\n      \"phoneNo\":this.signUpWithPhone.controls['phone'].value,\n      \"password\":this.signUpWithPhone.controls['password'].value,\n      \"confirmPassword\":this.signUpWithPhone.controls['password'].value,\n     \"dialCode\":this.countryCode == null ? this.phonecode : this.countryCode\n    }\n    if(!this.signUpWithPhone.invalid && this.signUpWithPhone.controls['password'].value==this.signUpWithPhone.controls['confirmPassword'].value)\n    {\n      this.spinner.show()\n      this.service.signUp(this.url,data).subscribe((res:any)=>\n      {\n        console.log('Res of signup with phone',res);\n        \n        if(res.statusCode == 200)\n        {\n          localStorage.setItem('signupData',JSON.stringify(data))\n          localStorage.setItem('token',res.data.accessToken)\n          Swal.fire('Success','Registered successfully','success')\n          sessionStorage.setItem('token',res.data.accessToken)\n          this.router.navigate([`vendor_detail/${this.role}`])\n          this.spinner.hide()\n        }\n        else{\n          this.spinner.hide()\n        Swal.fire('Oops',res.message,'error') \n        \n        }\n      })\n    }else if(this.signUpWithPhone.invalid){\n      this.spinner.hide()\n//Swal.fire('Oops','Please fill all field correctly','error')\n    }\n}\n}\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\n    <div class=\"auth-box on-sidebar\">\n        <div>\n            <div class=\"logo\">\n                <span class=\"db\"><img src=\"assets/images/logo-icon.svg\" alt=\"logo\" /></span>\n                <h5 class=\"font-medium m-b-20 pt-2\">Register for the vendor dashboard</h5>\n            </div>\n            <!-- Form -->\n            <ul ngbNav #nav=\"ngbNav\" class=\"nav-tabs custom-tab\">\n                <li ngbNavItem class=\"\">\n                  <a ngbNavLink class=\"text-white\">Sign up with email</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" [formGroup]=\"signUpWithEmail\">\n                                <div class=\" row cstm_fld\">\n                                    <div class=\"col-12 \">\n                                        <div class=\"form-group\">\n                                        <input class=\"form-control form-control-lg\" maxlength=\"15\" (keydown.space)=\"$event.preventDefault()\"type=\"text\" placeholder=\"First Name\" formControlName=\"firstName\">\n                                        <p class=\"erroe_msg\"\n                *ngIf=\"submitted && errorHandlingSignup('firstName', 'required')\">First name is required!</p>\n                <p class=\"erroe_msg\"\n                *ngIf=\"errorHandlingSignup('firstName', 'pattern')\"> First name should alphabetic only!</p>\n                                    </div>\n                                </div>\n                                    <div class=\"col-12 \">\n                                        <div class=\"form-group\">\n                                            <input class=\"form-control form-control-lg\" maxlength=\"15\" type=\"text\" placeholder=\"Last Name\"(keydown.space)=\"$event.preventDefault()\" formControlName=\"lastName\">\n                                            <p class=\"erroe_msg\"\n                                            *ngIf=\"submitted && errorHandlingSignup('lastName', 'required')\">Last name is required!</p>\n                                            <p class=\"erroe_msg\"\n                                            *ngIf=\"errorHandlingSignup('lastName', 'pattern')\">Last name should alphabetic only!</p>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-12 \">\n                                        <div class=\"form-group\">\n                                        <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\" formControlName=\"email\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingSignup('email', 'required')\">Email is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingSignup('email', 'pattern')\">Email is not valid!</p>\n                                    </div>\n                                    </div>\n                                    <div class=\"col-12 \">\n                                        <div class=\"form-group\">\n                                        <input class=\"form-control form-control-lg\" type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingSignup('password', 'required')\">Password is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingSignup('password', 'minlength')\">Minlength of password should 8!</p>\n                                    </div>\n                                    </div>\n                                    <div class=\"col-12 \">\n                                        <div class=\"form-group\">\n                                        <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\">\n                                        <p class=\"erroe_msg\"\n                                *ngIf=\"submitted && errorHandlingSignup('confirmPassword', 'required')\">\n                                Confirm password is required!\n                                    </p>\n                            <p class=\"erroe_msg\"\n                                *ngIf=\"(signUpWithEmail.get('confirmPassword').value.length>0) && signUpWithEmail.get('password').value !=  signUpWithEmail.get('confirmPassword').value\">\n                                Password mismatched!\n                                </p>\n                                    </div>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group row\">\n                                    <div class=\"col-md-12 \">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\" class=\"text-white\">Terms</a></label>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"form-group\">\n                                    <ul class=\"d-flex\">\n                                        <li class=\"pr-2 text-white\"><input type=\"radio\" name=\"role\" class=\"mr-1\" (change)=\"changeRole($event)\" value=\"shop\" checked>Shop</li>\n                                        <li class=\"text-white\"><input type=\"radio\" class=\"mr-1\" name=\"role\" (change)=\"changeRole($event)\" value=\"franchise\">Franchise</li>\n                                    </ul>\n                                \n                                </div>\n                                <div class=\"form-group text-center \">\n                                    <div class=\"col-xs-12 mb-0\">\n                                        <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"signUpEmail()\">SIGN UP</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                  </ng-template>\n                </li>\n                <li ngbNavItem>\n                  <a ngbNavLink class=\"text-white \">Sign up with phone no.</a>\n                  <ng-template ngbNavContent>\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <form class=\"form-horizontal m-t-20\" [formGroup]=\"signUpWithPhone\">\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" maxlength=\"15\" type=\"text\" placeholder=\"First Name\" (keydown.space)=\"$event.preventDefault()\"formControlName=\"firstName\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('firstName', 'required')\">First name is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('firstName', 'pattern')\">First name should alphabetic only!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" maxlength=\"15\" formControlName=\"lastName\"type=\"text\" (keydown.space)=\"$event.preventDefault()\" placeholder=\"Last Name\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('lastName', 'required')\">Last name is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('lastName', 'pattern')\">Last name should alphabetic only!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row \">\n                                    <div class=\"col-12 \">\n                                        <!-- <input class=\"form-control form-control-lg\" type=\"text\" required=\"\"  placeholder=\"Phone No.\"> -->\n                                        <div class=\"input-group\">\n                                            <div class=\"input-group-prepend\">\n                                              <select class=\"form-control form-control-lg\" (change)=\"someMethod($event.target.value)\">\n                                                <option *ngFor=\"let code of countrycode\" [value]=\"code.dial_code\"> {{code.dial_code}}</option>\n                                                  </select>\n                                            </div>\n                                            <input type=\"text\" class=\"form-control form-control-lg\" placeholder=\"Phone no.\"  \n                                            aria-label=\"Username\" aria-describedby=\"basic-addon1\" formControlName=\"phone\">\n                                          \n                                        </div>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('phone', 'required')\">\n                                        Phone number is required!\n                                    </p>\n                                    <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('phone', 'maxlength')\">\n                                        Maximum length should 15!\n                                </p>\n                                    <p class=\"erroe_msg\"\n                                    *ngIf=\"errorHandlingphone('phone', 'minlength')\">\n                                    Minimum length should 7!\n                            </p>\n                                <p class=\"erroe_msg\"\n                                    *ngIf=\"errorHandlingphone('phone', 'pattern')\">\n                                    Please enter valid phone no!\n                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12\">\n                                        <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\" formControlName=\"email\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('email', 'required')\">Email is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('email', 'pattern')\">Email is not valid!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" formControlName=\"password\" type=\"password\" required=\" \" placeholder=\"Password\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('password', 'required')\">Password is required!</p>\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"errorHandlingphone('password', 'minlength')\">Minlength of password should 8!</p>\n                                    </div>\n                                </div>\n                                <div class=\"form-group row\">\n                                    <div class=\"col-12 \">\n                                        <input class=\"form-control form-control-lg\" formControlName=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\">\n                                        <p class=\"erroe_msg\"\n                                        *ngIf=\"submitted && errorHandlingphone('confirmPassword', 'required')\">\n                                        Confirm password is required!\n                                            </p>\n                                    <p class=\"erroe_msg\"\n                                        *ngIf=\"(signUpWithPhone.get('confirmPassword').value.length>0) && signUpWithPhone.get('password').value !=  signUpWithPhone.get('confirmPassword').value\">\n                                        Password mismatched!\n                                        </p>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"form-group row\">\n                                    <div class=\"col-md-12 \">\n                                        <div class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\n                                            <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\" class=\"text-white\">Terms</a></label>\n                                        </div>\n                                    </div>\n                                </div> -->\n                                <div class=\"form-group\">\n                                    <ul class=\"d-flex\">\n                                        <li class=\"pr-2 text-white\"><input type=\"radio\" name=\"role\" class=\"mr-1\" (change)=\"changeRole($event)\" value=\"shop\" checked>Shop</li>\n                                        <li class=\"text-white\"><input type=\"radio\" class=\"mr-1\" name=\"role\" (change)=\"changeRole($event)\" value=\"franchise\">Franchise</li>\n                                      </ul>\n                                </div>\n                                <div class=\"form-group text-center \">\n                                    <div class=\"col-xs-12 p-b-20 \">\n                                        <button class=\"btn btn-block btn-lg btn-theme\" type=\"button\" (click)=\"phoneSignUp()\">SIGN UP</button>\n                                    </div>\n                                    <!-- <div class=\"form-group m-b-0 m-t-10 \">\n                                        <div class=\"col-sm-12 text-center text-white\">\n                                            Already have an account? <a routerLink=\"/login\" class=\"text-white m-l-5 \"><b>Sign In</b></a>\n                                        </div>\n                                    </div> -->\n                                </div>\n                               \n                            </form>\n                        </div>\n                    </div>\n                  </ng-template>\n                </li>\n              </ul>\n              <div [ngbNavOutlet]=\"nav\"></div>\n              <div class=\"form-group m-b-0 m-t-10 \">\n                <div class=\"col-sm-12 text-center text-white\">\n                    Already have an account? <a routerLink=\"/login\" class=\"text-white m-l-5 \"><b>Log in</b></a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]}